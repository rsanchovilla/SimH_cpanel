
  set console -n -q log=console.txt 
; set debug -n -q debug.txt

; set cpu debug=CMD;DATA;DETAIL;EXP

echo
echo ***
echo *** Build Scheme A (Spring 1951 by A.Turing)
echo ***
echo *** Type in the routines code on the Offline Perforator and get 
echo *** each routine punched on PaperTape 
echo ***
echo

; prepare a routine to be loaded later at a given drum track
; use the offline Perforator to punch the routine in paper tape
; setup Perforator settings
set Perforator echo
set Perforator use_wc_k

; attach papertape to punch
att -q -n Perforator Tapes/COSFAST_tr30.pt.txt
; leave some blank tape at the beginning, mark start of tape with CCCC for
; easy visual location
typein line    //////CCCCCC//////
; type on Perforator (and thus punch) the name sequence with the name of routine
typein line    Q U COSFAST
typein line    //////
; leave some separation after name for easy visual location
; punch destination addr of routine: track 30 (char V) Left 
; (use //E# instead of ///# to store in right half track)
typein line    K AK @ ///# V///     ; track 30 (char V)
; proper punch. Will load the routine in S4 using warning chars K or J
typein routine Lib/COSFAST.txt
; final sequence: set the cue of roughwrite routine
; (will to save the loaded routine to destination track)
typein line    K VS @ //// //A/
; and instruct to execute is
typein line    Y
; leave some blank tape at the end
typein line    //////$$$$$$//////
; detach paper tape from Perforator
det Perforator 

att -q -n Perforator Tapes/ACTIONC_tr29.pt.txt
typein line    //////CCCCCC//////
typein line    Q U ACTIONC 
typein line    //////
typein line    K AK @ ///# X///      ; track 29 (char X)
typein routine Lib/ACTIONC.txt
typein line    K VS @ //// //A/
typein line    Y
typein line    //////$$$$$$//////
det Perforator 

; This routine needs TWO storage tubes, so punch both one after the other
att -q -n Perforator Tapes/DECOUTC_tr28LR.pt.txt
typein line     //////CCCCCC//////
typein line     Q R DECOUTCONE
typein line     //////
typein line     K AK @ ///# M///     ; track 28L (char M)
typein routine1 Lib/DECOUTC.txt      ; type routine 1 (left pair of cols labeled / E)
typein line     K VS @ //// //A/
typein line     Y
typein line     //////CCCCCC//////
typein line     Q R DECOUTCTWO
typein line     //////
typein line     K AK @ //E# M///     ; track 28R (char M)
typein routine2 Lib/DECOUTC.txt      ; type routine 2 (right pair of cols labeled @ A)
typein line     K VS @ //// //A/
typein line     Y
typein line     //////$$$$$$//////
det Perforator 

att -q -n Perforator Tapes/DECOUTD_tr27LR.pt.txt
typein line     //////CCCCCC//////
typein line     Q R DECOUTDONE
typein line     //////
typein line     K AK @ ///# "///     ; track 27L (char ")
typein routine1 Lib/DECOUTD.txt      ; type routine 1 (left pair of cols labeled / E)
typein line     K VS @ //// //A/
typein line     Y
typein line     //////CCCCCC//////
typein line     Q R DECOUTDTWO
typein line     //////
typein line     K AK @ //E# "///     ; track 27R (char ")
typein routine2 Lib/DECOUTD.txt      ; type routine 2 (right pair of cols labeled @ A)
typein line     K VS @ //// //A/
typein line     Y
typein line     //////$$$$$$//////
det Perforator 

att -q -n Perforator Tapes/DIVISIONA_EXP_tr26.pt.txt
typein line    //////CCCCCC//////
typein line    Q J DIVISIONEXP
typein line    //////
typein line    K AK @ ///# G///      ; track 26 (char G)
typein routine Lib/DIVISIONA_EXP.txt
typein line    K VS @ //// //A/
typein line    Y
typein line    //////$$$$$$//////
det Perforator 

att -q -n Perforator Tapes/DIVISIONB_tr25.pt.txt
typein line    //////CCCCCC//////
typein line    Q D DIVISIONB
typein line    //////
typein line    K AK @ ///# B///      ; track 25 (char B)
typein routine Lib/DIVISIONB.txt
typein line    K VS @ //// //A/
typein line    Y
typein line    //////$$$$$$//////
det Perforator 

att -q -n Perforator Tapes/ENGLISHB_tr24L.pt.txt
typein line    //////CCCCCC//////
typein line    Q # ENGLISHB
typein line    //////
typein line    K AK @ ///# O///      ; track 24L (char O)
typein routine Lib/ENGLISHB.txt
typein line    K VS @ //// //A/
typein line    Y
typein line    //////$$$$$$//////
det Perforator 

att -q -n Perforator Tapes/ENGPRINT_tr24R.pt.txt
typein line    //////CCCCCC//////
typein line    Q # ENGPRINT
typein line    //////
typein line    K AK @ //E# O///      ; track 24R (char O)
typein routine Lib/ENGPRINT.txt
typein line    K VS @ //// //A/
typein line    Y
typein line    //////$$$$$$//////
det Perforator 

att -q -n Perforator Tapes/INTERFERE_tr23.pt.txt
typein line    //////CCCCCC//////
typein line    Q D INTERFERE
typein line    //////
typein line    K AK @ ///# Q///      ; track 23 (char Q)
typein routine Lib/INTERFERE.txt
typein line    K VS @ //// //A/
typein line    Y
typein line    //////$$$$$$//////
det Perforator 

att -q -n Perforator Tapes/PAGEPRINTA_tr22L.pt.txt
typein line    //////CCCCCC//////
typein line    Q R PAGEPRINTA
typein line    //////
typein line    K AK @ ///# P///      ; track 22L (char P)
typein routine Lib/PAGEPRINTA.txt
typein line    K VS @ //// //A/
typein line    Y
typein line    //////$$$$$$//////
det Perforator 

att -q -n Perforator Tapes/ROUTINEPRINTA_tr22R.pt.txt
typein line    //////CCCCCC//////
typein line    Q F ROUTINEPRINTA
typein line    //////
typein line    K AK @ //E# P///      ; track 22R (char P)
typein routine Lib/ROUTINEPRINTA.txt
typein line    K VS @ //// //A/
typein line    Y
typein line    //////$$$$$$//////
det Perforator 

att -q -n Perforator Tapes/DECOUTPUT_tr21L.pt.txt
typein line    //////CCCCCC//////
typein line    Q D DECOUTPUT
typein line    //////
typein line    K AK @ ///# Y///      ; track 21L (char Y)
typein routine Lib/DECOUTPUT.txt
typein line    K VS @ //// //A/
typein line    Y
typein line    //////$$$$$$//////
det Perforator 

att -q -n Perforator Tapes/DECOUTPUTA_tr21R.pt.txt
typein line    //////CCCCCC//////
typein line    Q R DECOUTPUTA
typein line    //////
typein line    K AK @ //E# Y///      ; track 21R (char Y)
typein routine Lib/DECOUTPUTA.txt
typein line    K VS @ //// //A/
typein line    Y
typein line    //////$$$$$$//////
det Perforator 

att -q -n Perforator Tapes/INPUTC_tr20L.pt.txt
typein line    //////CCCCCC//////
typein line    Q I INPUTC
typein line    //////
typein line    K AK @ ///# H///      ; track 20L (char H)
typein routine Lib/INPUTC.txt
typein line    K VS @ //// //A/
typein line    Y
typein line    //////$$$$$$//////
det Perforator 

att -q -n Perforator Tapes/INPUTD_tr20R.pt.txt
typein line    //////CCCCCC//////
typein line    Q I INPUTD
typein line    //////
typein line    K AK @ //E# H///      ; track 20R (char H)
typein routine Lib/INPUTD.txt
typein line    K VS @ //// //A/
typein line    Y
typein line    //////$$$$$$//////
det Perforator 

; This routine needs TWO storage tubes, so punch both one after the other
att -q -n Perforator Tapes/WRITETAPEA_tr19LR.pt.txt
typein line     //////CCCCCC//////
typein line     Q F WRITETAPEAONE
typein line     //////
typein line     K AK @ ///# W///     ; track 19L (char W)
typein routine1 Lib/WRITETAPEA.txt   ; type routine 1 (left pair of cols labeled / E)
typein line     K VS @ //// //A/
typein line     Y
typein line     //////CCCCCC//////
typein line     Q F WRITETAPEATWO
typein line     //////
typein line     K AK @ //E# W///     ; track 19R (char W)
typein routine2 Lib/WRITETAPEA.txt   ; type routine 2 (right pair of cols labeled @ A)
typein line     K VS @ //// //A/
typein line     Y
typein line     //////$$$$$$//////
det Perforator 

att -q -n Perforator Tapes/WRITEA_tr18LR.pt.txt
typein line     //////CCCCCC//////
typein line     Q D WRITEAONE
typein line     //////
typein line     K AK @ ///# L///     ; track 18L (char L)
typein routine1 Lib/WRITEA.txt
typein line     K VS @ //// //A/
typein line     Y
typein line     //////CCCCCC//////
typein line     Q D WRITEATWO
typein line     //////
typein line     K AK @ //E# L///     ; track 18R (char L)
typein routine2 Lib/WRITEA.txt
typein line     K VS @ //// //A/
typein line     Y
typein line     //////$$$$$$//////
det Perforator 

att -q -n Perforator Tapes/ROLLCALL_tr17LR.pt.txt
typein line     //////CCCCCC//////
typein line     Q J ROLLCALLONE
typein line     //////
typein line     K AK @ ///# Z///     ; track 17L (char Z)
typein routine1 Lib/ROLLCALLA.txt    ; type routine 1 (left pair of cols labeled / E)
typein line     K VS @ //// //A/
typein line     Y
typein line     //////CCCCCC//////
typein line     Q J ROLLCALLTWO
typein line     //////
typein line     K AK @ //E# Z///     ; track 17R (char Z)
typein routine2 Lib/ROLLCALLA.txt    ; type routine 2 (right pair of cols labeled @ A)
typein line     K VS @ //// //A/
typein line     Y
typein line     //////$$$$$$//////
det Perforator 


echo ***
echo *** Punch Compound Library Tape

; prepare compound tape, by joining together all individual
; tape files (removes spaces and <cr><lf> so the result is the
; same as it would have been on the good old days)

del -q       Tapes/SchemeA_Routines.pt.txt 
appendtotape Tapes/SchemeA_Routines.pt.txt Tapes/COSFAST_tr30.pt.txt
appendtotape Tapes/SchemeA_Routines.pt.txt Tapes/ACTIONC_tr29.pt.txt
appendtotape Tapes/SchemeA_Routines.pt.txt Tapes/DECOUTC_tr28LR.pt.txt
appendtotape Tapes/SchemeA_Routines.pt.txt Tapes/DECOUTD_tr27LR.pt.txt
appendtotape Tapes/SchemeA_Routines.pt.txt Tapes/DIVISIONA_EXP_tr26.pt.txt
appendtotape Tapes/SchemeA_Routines.pt.txt Tapes/DIVISIONB_tr25.pt.txt
appendtotape Tapes/SchemeA_Routines.pt.txt Tapes/ENGLISHB_tr24L.pt.txt
appendtotape Tapes/SchemeA_Routines.pt.txt Tapes/ENGPRINT_tr24R.pt.txt
appendtotape Tapes/SchemeA_Routines.pt.txt Tapes/INTERFERE_tr23.pt.txt
appendtotape Tapes/SchemeA_Routines.pt.txt Tapes/PAGEPRINTA_tr22L.pt.txt
appendtotape Tapes/SchemeA_Routines.pt.txt Tapes/ROUTINEPRINTA_tr22R.pt.txt
appendtotape Tapes/SchemeA_Routines.pt.txt Tapes/DECOUTPUT_tr21L.pt.txt
appendtotape Tapes/SchemeA_Routines.pt.txt Tapes/DECOUTPUTA_tr21R.pt.txt
appendtotape Tapes/SchemeA_Routines.pt.txt Tapes/INPUTC_tr20L.pt.txt
appendtotape Tapes/SchemeA_Routines.pt.txt Tapes/INPUTD_tr20R.pt.txt
appendtotape Tapes/SchemeA_Routines.pt.txt Tapes/WRITETAPEA_tr19LR.pt.txt
appendtotape Tapes/SchemeA_Routines.pt.txt Tapes/WRITEA_tr18LR.pt.txt
appendtotape Tapes/SchemeA_Routines.pt.txt Tapes/ROLLCALL_tr17LR.pt.txt

echo *** Punch Directory tape
echo ***   
echo

; prepare directory

att -q -n Perforator Tapes/SchemeA_Directory.pt.txt 
typein line    //////CCCCCC//////
typein line    Q D DIRECTORY
typein line    //////
; we fill the (0..63) directory entries with the magnetic instruction that will
; used later by false cue to load the routine to the desired address in tube S0 or S1 (or both)
; The dir entries will be stored in S4 and then saved back to directory track 
;                            cue to call the routine
; Routine                       Ent Chk nnn trk  -> nnn=dir entry, trk=dir track
; DIVISION A      Its cue is    H @ T L H E E Z  -> points to dir entry 52 (HE) at track dir 33L (EZ)
; EXPONENTIAL A                 / @ T L H E E Z                         52 (HE) 
; DIVISION B                    / @ G Z Y E E Z                         53 (YE) 
; we have to fill entry 52 (HE) in tube S4 = 52 + 256 = HD
; we have to fill entry 53 (YE) in tube S4 = 53 + 256 = YD                                                            
; The Routine DIVISIONEXP has been stored in track 26L (char G) and should load to col @A -> its magnetic instruction=G//@ 
;             DIVISIONB                            25L (char B)                        @A                             B//@          
; as both mag instr are in consecutive address, we pack them in a single K warning char 
typein line    K HD @ G//@ B//@

; DECOUT C        Its cues are  R @ A Q P E E Z  -> points to dir entry 54 (PE) at track dir 33L (EZ)
;                               Q @ A Q P E E Z   
;                               $ @ A Q P E E Z   
; DECOUT D                      / / O $ Q E E Z                         55 (QE) 
;                               S / O $ Q E E Z   
; we have to fill entry 54 (PE) in tube S4 = 54 + 256 = PD
; we have to fill entry 55 (QE) in tube S4 = 55 + 256 = QD                                                            
; The Routine DECOUT C    has been stored in track 28LR (char M) and should load to col /E @A -> its magnetic instruction=M/@/
;             DECOUT D                             27LR (char ")                        /E @A                             "/@/          
; as both mag instr are in consecutive address, we pack them in a single K warning char 
typein line    K PD @ M/@/ "/@/

; DECOUTPUT       Its cues are  / / . . A E E Z  -> points to dir entry 35 (AE) at track dir 33L (EZ)
;                               L E . . A E E Z   
; DECOUTPUTA                    / @ $ B B E E Z                         57 (BE) 
; we have to fill entry 35 (AE) in tube S4 = 35 + 256 = AD
; we have to fill entry 57 (BE) in tube S4 = 57 + 256 = BD                                                            
; The Routine DECOUTPUT   has been stored in track 21L (char Y) and should load to col /E -> its magnetic instruction=Y///
;             DECOUTPUTA                           21R (char Y)                        @A                             Y/E@          
; as both mag instr are in consecutive address, we pack them in a single K warning char 
typein line    K AD E Y///
typein line    K BD E Y/E@

; INPUT C         Its cues are  V @ @ $ # E E Z  -> points to dir entry 40 (#E) at track dir 33L (EZ)
; we have to fill entry 40 (#E) in tube S4 = 40 + 256 = #D
; The Routine INPUT C  has been stored in track 20L (char H) and should load to col @A -> its magnetic instruction=H//@
typein line    K #D E H//@ 

; INPUT D         Its cues are  / / . . X E E Z  -> points to dir entry 61 (XE) at track dir 33L (EZ)
; we have to fill entry 61 (XE) in tube S4 = 61 + 256 = XD
; The Routine INPUT D  has been stored in track 20R (char H) and should load to col /E -> its magnetic instruction=H/E/
typein line    K XD E H/E/ 

; PAGEPRINT       Its cues are  A / @ / D E E Z  -> points to dir entry 41 (DE) at track dir 33L (EZ)
;                               : / @ / D E E Z   
; ROUTINEPRINT    Its cues are  R A @ / D E E Z  -> points to dir entry 41 (DE) at track dir 33L (EZ)
; we have to fill entry 41 (DE) in tube S4 = 41 + 256 = DD
; The Routine PAGEPRINT+ROUTINEPRINT have been stored in track 22LR (char P) and should load to col /E @A -> its magnetic instruction=P/@/
typein line    K DD E P/@/ 

; ENGLISH B       Its cues are  O E : E : / E Z  -> points to dir entry 4 (:/) at track dir 33L (EZ)
; we have to fill entry 4 (:/) in tube S4 = 4 + 256 = :#
; The Routine ENGLISH B has been stored in track 24L (char O) and should load to col /E -> its magnetic instruction=O///
typein line    K :# E O/// 

; ENGPRINT        Its cues are  / / . . U E E Z  -> points to dir entry 39 (UE) at track dir 33L (EZ)
; we have to fill entry 39 (UE) in tube S4 = 39 + 256 = UD
; The Routine ENGPRINT has been stored in track 24R (char O) and should load to col /E -> its magnetic instruction=O/E/
typein line    K UD E O/E/ 

; COSFAST         Its cues are  $ $ . . U / E Z  -> points to dir entry 7 (U/) at track dir 33L (EZ)
; we have to fill entry 7 (U/) in tube S4 = 7 + 256 = U#
; The Routine COSFAST   has been stored in track 30L (char V) and should load to col /E -> its magnetic instruction=V///
typein line    K U# E V/// 

; INTERFERE       Its cues are  $ E O T E / E Z  -> points to dir entry 1 (E/) at track dir 33L (EZ)
; we have to fill entry 1 (E/) in tube S4 = 1 + 256 = E#
; The Routine INTERFERE  has been stored in track 23L (char Q) and should load to col @A -> its magnetic instruction=Q//@
typein line    K E# E Q//@ 

; ACTION C          Its cues are  $ E J O B / E Z  -> points to dir entry 25 (B/) at track dir 33L (EZ)
;                                 F A J O B / E Z
; we have to fill entry 25 (B/) in tube S4 = 25 + 256 = B#
; The Routine ACTION C  has been stored in track 29L (char X) and should load to col @A -> its magnetic instruction=X//@
typein line    K B# E X//@ 

; WRITETAPE A     Its cues are  $ E W G : E E Z  -> points to dir entry 36 (:E) at track dir 33L (EZ)
; we have to fill entry 36 (:E) in tube S4 = 36 + 256 = :D
; The Routine WRITETAPE A   has been stored in track 19LR (char W) and should load to col /E @A -> its magnetic instruction=W/@/
; as both mag instr are in consecutive address, we pack them in a single K warning char 
typein line    K :D E W/@/ 

; WRITE A          Its cues are  T E U N @ / E Z  -> points to dir entry 2 (@/) at track dir 33L (EZ)
; we have to fill entry 2 (@/) in tube S4 = 2 + 256 = @#
; The Routine WRITE A  has been stored in track 18LR (char L) and should load to col /E @A -> its magnetic instruction=L/@/
typein line    K @# E L/@/ 

; ROLLCALL A       Its cues are  $ $ $ T S E E Z  -> points to dir entry 37 (SE) at track dir 33L (EZ)
; we have to fill entry 2 (SE) in tube S4 = 37 + 256 = SD
; The Routine ROLLCALL A  has been stored in track 17LR (char Z) and should load to col /E @A -> its magnetic instruction=Z/@/
typein line    K SD E Z/@/ 


; set destination to write S4 to track 33L
typein line    KAK@///# EE//
; call to write S4 to destination track in drum
typein line    K VS @ //// //A/
typein line    Y
; directory set. Do a dynamic stop to allow user to 
; attach the compound tape and go on
typein line    W
typein line    //////$$$$$$//////
det Perforator


echo
echo ***
echo *** Load Drum-Resident Scheme A 
echo ***
echo

att -n -q drum SchemeA.drm

; load drum with Basic SchemeA routines
; These are protected routines -> write is disabled for
; tracks 0-3 where these routines resides
load DrumIsolated/INITIAL.txt
load DrumIsolated/INPUT_SPECIAL.txt
load DrumIsolated/PERM.txt
load DrumIsolated/ROUGHWRITE.txt

echo
echo
echo ***
echo *** Start Computer
echo *** Load Directory and Compound library tape into Drum
echo ***
echo

if "%1"=="DEBUG" set debug -n -q debug.txt

set cpu KEC
; Hand switches must be all be set to zero in order to load Scheme A from drum
dep H 0

go until "++INITIAL--"
go until "\n"

; set ptr echo

; attach the directory tape (the first one to read) and process it
att -q ptr Tapes/SchemeA_Directory.pt.txt
go

; continue here because cpu stopped on dynamic stop, 
; because Directory tape terminates with W warning char

; reset the computer
set cpu KEC

; load Drum with library routines
; attach compound tape and process it
att -q ptr Tapes/SchemeA_Routines.pt.txt
go
det ptr

; reset the computer
set cpu KEC
go

; ready to load papertape to run a production job

echo
echo ***
echo *** Scheme A loaded into Drum
echo ***
echo

det -q all
:end
