A/ROLLCALL/A                       Date.   5.11.51

    Purpose: To print the sums (mod 2^40) of the long
             lines of each half track
             
    Cue: $ $ $ T S E E Z   cue to be called directly from INPUT
         $ E $ T S E E Z   cue to be called as subroutine
          
    Principal lines: [/E] = $ / / T
             
    Magnetic Storage: variable     Electronic Storage: S0 S1
    
    Stores Altered: 
    
    Effects: The routine may be entered in two ways:

    (1). with stop G on , use the steering tape

             K V S @  $ $ $ T   S E E Z  Y  W

         when the stop is reached, set H = Number of track at
         which it is desired to start. Give one completition 
         signal.

    (2). Bring the routine to S0 manually. Clear Control, set 
         H as above. Switch on completition signals.

    In both cases the printing is as follows:

    C.R. L.F. Track  Space  Sum of LH   Space  Sum of RH
              No.           half track         Half track

    This is repeated for each of the following tracks until the
    machine is stopped manually.

    Note by Roberto Sancho: this routine has been extended a bit to 
    allow it to be called as a subroutine. [/C] contains the first
    track to start with, [EC] contais the first track not to be 
    processed (i.e. if [EC]=36, will print up to track 35)
  
    
    Library Progs - Bodleian Special Collection 
    MS. Eng. misc. b. 260-C.43.pdf
    p79

    [Routine ROLLCALL/A         ] 
    
    [Col /          E ]                [Col @          A ]  
                                                                                  
    | ///G | / | $//T |                | VSTA | / |      |
    | MK/Z | E | T//: |                | /CQO | E |      |
    | ME/: | @ | VEQO |                | MKQB | @ |      |
    | MKT/ | A | /RQC |                | Y@QO | A |      |
    | XETC | : | BEQG |                | LEQB | : |      |
    | XK/S | S | M//T |                | QE/P | S |      |
    | VKTA | I | VKTA |                |      | I |      |
    | $//: | U | $EQO |                |      | U |      |
    | FE/: | # | VK/N |                | MKQO | # |      |
    | OEQO | D | VK/A |                | ECQG | D |      |
    | GE/C | R | S//I |                | NS/T | R |      |
    | VK/N | J | A//: |                | RE/P | J |      |
    | VK/A | N | OEQG |                |      | N |      |
    | H//I | F | UEW: |                |      | F |      |
    | A//: | C | FE/T |                |      | C |      |
    | OEQG | K | MKT/ |                |      | K |      |
    | R/Z: | T | QETC |                |      | T |      |
    | T//T | Z | MK/S |                |      | Z |      |
    | T//: | L | RE/P |                |      | L |      |
    | XK/: | W |      |                |      | W |      |
    | VEQO | H |      |                |      | H |      |
    | /#QC | Y |      |                | P@/P | Y |      |
    | BEQG | P |      |                | U@// | P |      |
    | F//T | Q | E/// |                |      | Q |      |
    | VKTA | O | E/// |                |      | O |      |
    | $EQO | B | @/// |                |      | B |      |
    | VK/N | G | //// |                |      | G |      |
    | VK/A | " | ///E |                |      | " |      |
    | @E/I | M | //Y/ |                |      | M |      |
    | A//: | X | //@# |                |      | X |      |
    | OEQG | V | VE// |                |      | V |      |
    | B/L: | $ | U/// |                |      | $ |      |
                                                                                  
    Tape: ROLLCALL A ONE                 
    Destination Sequence: KAK@///#SEEZ
          
    [End]
        
    0  //  ///G  Dummy Stop /G
    1  E/  MK/Z  [MK]=H
    2  @/  ME/:  set letter shift
    3  A/  MKT/  A=[MK]=track to process
    4  :/  XETC  
    5  S/  XK/S  
    6  I/  VKTA  
    7  U/  $//:  Print <CR>
    8  #/  FE/:  Print <LF>
    9  D/  OEQO  
   10  R/  GE/C  
   11  J/  VK/N  
   12  N/  VK/A  
   13  F/  H//I  
   14  C/  A//:  Print Track char
   15  K/  OEQG  
   16  T/  R/Z:  
   17  Z/  T//T  
   18  L/  T//:  Print space
   19  W/  XK/:  Read track to process into S4 S5
   20  H/  VEQO  B7=62
   21  Y/  /#QC  calc checksum
   22  P/  BEQG  
   23  Q/  F//T  if (B>=0) goto 21
   24  O/  VKTA  [VK]=checksum
   25  B/  $EQO  
   26  G/  VK/N  
   27  "/  VK/A   
   28  M/  @E/I  
   29  X/  A//:  print checksum char
   30  V/  OEQG  
   31  $/  B/L:  
                 
   32  /E  $//T  if (B>=0) goto 26
   33  EE  T//:  print space
   34  @E  VEQO  B7=62
   35  AE  /RQC  calc checksum
   36  :E  BEQG  
   37  SE  M//T  if (B>=0) goto 21
   38  IE  VKTA  [VK]=checksum 
   39  UE  $EQO  
   40  #E  VK/N  
   41  DE  VK/A  
   42  RE  S//I  
   43  JE  A//:  print checksum char  
   44  NE  OEQG  
   45  FE  UEW:  
   46  CE  FE/T  if (B>=0) goto 40
   47  KE  MKT/  A=[MK]=current track [XK]=mag instr
   48  TE  QETC  incr both
   49  ZE  MK/S  save back to [MK, XK]
   50  LE  RE/P  goto 6 loop to process next track
   51  WE        
   52  HE        
   53  YE        
   54  PE        
   55  QE  E///  
   56  OE  E///  
   57  BE  @///  
   58  GE  ////  
   59  "E  ///E  
   60  ME  //Y/  const Set letter shift
   61  XE  //@#  
   62  VE  VE//  
   63  $E  U///  

   Extension to be called as subroutine. Written by
   Roberto Sancho Jan 2023 

   64  /@  VSTA  Entry: save return link
   65  E@  /CQO  B7=[/C]=first track to process
   66  @@  MKQB  [MK]=first track to process
   67  A@  Y@QO  B7=P@/P instr
   68  :@  LEQB  patch loop track with goto test for end track
   69  S@  QE/P  goto 2 -> start processing tracks
   70  I@  
   71  U@  
   72  #@  MKQO  test for end track: B7=[MK]=current track
   73  D@  ECQG  B7=B7-[EC] last track to process
   74  R@  NS/T  if (B>=0) goto exit routine
   75  J@  RE/P  goto 6 loop to process next track

   85  Y@  P@/P 
   86  P@  U@// 




RE/P  goto 6  
