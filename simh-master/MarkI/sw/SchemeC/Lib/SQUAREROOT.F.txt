SQUAREROOT/F

    Purpose: To replace x = f.b.a (floating binary accumulator)
             by function value f(x)=sqrt(x)
            
    Cue: Magnetic Storage: single half track
         electronic storage: tube 0
         control numbers: (1) $$, (2) E/

    Link: closed

    Input details: conventional procedure
                   this routine makes use of NORMALISE routine
                   that should be available in tube 3.
                   Also uses the SQUAREROOT fixed point routine                   

    Effects:
    
    Lines /I to JI are used as working space.
    Line pair #I and RI are the floating binary accumulator (f.b.a)
    Line pair :I and II are the floating binary multiplicand (f.b.d)
       
        +---------+-------------------+-------------------+ 
        |  Lines  | Initial           | Final             |
        | altered | contents          | contents          |
        +---------+-------------------+-------------------+ 
        | /I @I   | Irrelevant        | Irrelevant        |
        +---------+-------------------+-------------------+
        | #I RI   | f.b.a = x         | f.b.a = sqrt(x)   |
        +---------+-------------------+-------------------+
        | AL      | Irrelevant        | AL    = sqrt(x)   |
        |         |                   |   f               |
        +---------+-------------------+-------------------+
        | AM      | Irrelevant        | Empty             |
        | D       | Irrelevant        | 2^10              |
        +---------+-------------------+-------------------+ 

    Each routine begins and terminates by normalising the f.b.a.
    If the argument is known to be in normal form then 
    normalising on entry can be ommited using control number (2).
    if the argument should be normalized on entry use control 
    number (1).

    Ferranti Mark I Programming Manual, third edition 
    Bodleian Special Collection 
    MS. Eng. misc. b. 260-C.41.pdf
    p62, p66
    
    [Routine SQUAREROOT/F   ] 

    [Col     / ]                        [        E ]              
                                                                          
    | / | //QO | normalise argument     | / |      |                                         
    | E | CU/P |___                     | E |      | 
    | @ | #IT/ |                        | @ |      |          
    | A | DSQO | sets arg for SQUAREROOT| A |      |          
    | : | E/ZZ | plants electronic link | : |      |          
    | S | "//J | calls in SQUAREROOT    | S |      |          
    | I | I/QO | AL = sqrt(a)           | I |      |          
    | U | FS/P |___f                    | U |      | 
    | # | #ITA |                        | # |      |          
    | D | :S/C | if p is even ...       | D |      |          
    | R | RI/F | if p is odd ...        | R |      |          
    | J | RI/A |                        | J |      | 
    | N | ///I |                        | N |      | 
    | F | IS/C | D=0.5 if p is even     | F |      | 
    | C | E:/M |  =1/sqrt(2) if p is odd| C |      | 
    | K | B//C |                        | K |      | 
    | T | IST/ | forms number           | T |      | 
    | Z | #I/N | part of result         | Z |      | 
    | L | #I/A |                        | L |      | 
    | W | RITK | plants exponent        | W |      | 
    | H | A:TC | of result              | H |      | 
    | Y | RITA |                        | Y |      | 
    | P | P/QO | normalise result       | P |      |      
    | Q | CU/P |___                     | Q |      |      
    | O | LS/P |___ closure             | O |      |      
    | B | G$NI | = 1/sqrt(2)            | B |      |      
    | G | K@HP |                        | G |      |      
    | " | $E// | (electronic) cue to    | " |      | 
    | M | //$/ | SQUAREROOT             | M |      | 
    | X |      |                        | X |      | 
    | V |      |                        | V |      | 
    | $ |      |                        | $ |      | 
                                                                          
        
    [End]
