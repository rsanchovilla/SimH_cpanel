
; Test floating point RCS/C routines

; params for MathFixTest ROUTINE 
;   [/K] -> addr for ADD/MULTIPLY

; load Float Routines that are expected to be in storage

M H/EI      ; load NORMALISE from track 20R to tube S3 (cols IU)
M H//#      ; load ADD & MULTIPLY from track 20L to tube S4 (cols #D)

; ********* Test DECINPUT

; call MathFixTest ROUTINE at Track 10L to echo ptr to printer input until $ char
K PS @ CA// R/@/
T CS
TEST:DECINPUT/CONVERTER/DECOUTPUT$

; call MathFixTest ROUTINE at Track 10L to call DECINPUT, 
; then call CONVERTER to convert to float, then store in float f.b.a.
K PS @ /E// R/@/
T CS

; the input number
; format:  +/- nnnnn.nnnn (space)
+123.456Z

; call MathFixTest ROUTINE at Track 10L to convert f.b.a.
; to AM integral + AL fract, then call DECOUTPUT to print it
K PS @ N/// R/@/           
T CS
; should print +123.4560000

; ********* Test ADD

; call MathFixTest ROUTINE at Track 10L to echo ptr to printer input until $ char
K PS @ CA// R/@/
T CS
TEST:ADD$

; call MathFixTest ROUTINE at Track 10L to call DECINPUT, 
; then call CONVERTER to convert to float, then store in float f.b.a.
K PS @ /E// R/@/
T CS

; the input number
; format:  +/- nnnnn.nnnn (space)
+123.456Z

; call MathFixTest ROUTINE at Track 10L to Input a number, then add it to f.b.a
K PS @ CE// R/@/           
T CS
; the number to ADD
; format:  +/- nnnnn.nnnn (space)
+789.0123Z

; call MathFixTest ROUTINE at Track 10L to convert f.b.a.
; to AM integral + AL fract, then call DECOUTPUT to print it
K PS @ N/// R/@/           
T CS
; should print +912.46830000

; call MathFixTest ROUTINE at Track 10L to Input a number, then add it to f.b.a
K PS @ CE// R/@/           
T CS
; the number to ADD
; format:  +/- nnnnn.nnnn (space)
-12.008Z

; call MathFixTest ROUTINE at Track 10L to convert f.b.a.
; to AM integral + AL fract, then call DECOUTPUT to print it
K PS @ N/// R/@/           
T CS
; should print +900.46030000

; call MathFixTest ROUTINE at Track 10L to Input a number, then add it to f.b.a
K PS @ CE// R/@/           
T CS
; the number to ADD
; format:  +/- nnnnn.nnnn (space)
+0.00005Z

; call MathFixTest ROUTINE at Track 10L to convert f.b.a.
; to AM integral + AL fract, then call DECOUTPUT to print it
K PS @ N/// R/@/           
T CS
; should print +900.46035000

; call MathFixTest ROUTINE at Track 10L to Input a number, then add it to f.b.a
K PS @ CE// R/@/           
T CS
; the number to ADD
; format:  +/- nnnnn.nnnn (space)
-0.0003Z

; call MathFixTest ROUTINE at Track 10L to convert f.b.a.
; to AM integral + AL fract, then call DECOUTPUT to print it
K PS @ N/// R/@/           
T CS
; should print +900.46004999

; call MathFixTest ROUTINE at Track 10L to Input a number, then add it to f.b.a
K PS @ CE// R/@/           
T CS
; the number to ADD
; format:  +/- nnnnn.nnnn (space)
-900Z

; call MathFixTest ROUTINE at Track 10L to convert f.b.a.
; to AM integral + AL fract, then call DECOUTPUT to print it
K PS @ N/// R/@/           
T CS
; should print +.46005000

; call MathFixTest ROUTINE at Track 10L to Input a number, then add it to f.b.a
K PS @ CE// R/@/           
T CS
; the number to ADD
; format:  +/- nnnnn.nnnn (space)
+0.009Z

; call MathFixTest ROUTINE at Track 10L to convert f.b.a.
; to AM integral + AL fract, then call DECOUTPUT to print it
K PS @ N/// R/@/           
T CS
; should print +.46905000

; call MathFixTest ROUTINE at Track 10L to Input a number, then add it to f.b.a
K PS @ CE// R/@/           
T CS
; the number to ADD
; format:  +/- nnnnn.nnnn (space)
+10.1Z

; call MathFixTest ROUTINE at Track 10L to convert f.b.a.
; to AM integral + AL fract, then call DECOUTPUT to print it
K PS @ N/// R/@/           
T CS
; should print +10.56905000

; ********* Test MULT 

; call MathFixTest ROUTINE at Track 10L to echo ptr to printer input until $ char
K PS @ CA// R/@/
T CS
TEST:MULTIPLY$

; call MathFixTest ROUTINE at Track 10L to call DECINPUT, 
; then call CONVERTER to convert to float, then store in float f.b.a.
K PS @ /E// R/@/
T CS
; the input number
; format:  +/- nnnnn.nnnn (space)
+11.2Z

; call MathFixTest ROUTINE at Track 10L to call DECINPUT, 
; then call CONVERTER to convert to float, then store in float f.b.d.
K PS @ UE// R/@/
T CS
; the input number
; format:  +/- nnnnn.nnnn (space)
+3.0Z

; call MathFixTest ROUTINE at Track 10L to Input a number, 
; then calc f.b.a = f.b.a + f.b.d * Number
K PS @ YE// R/@/           
T CS
; the number to mutl to f.b.d
; format:  +/- nnnnn.nnnn (space)
+6.0Z

; call MathFixTest ROUTINE at Track 10L to convert f.b.a.
; to AM integral + AL fract, then call DECOUTPUT to print it
K PS @ N/// R/@/           
T CS
; should print 11.2 + 3.0 * 6.0 = 29.20000000

; call MathFixTest ROUTINE at Track 10L to call DECINPUT, 
; then call CONVERTER to convert to float, then store in float f.b.d.
K PS @ UE// R/@/
T CS
; the input number
; format:  +/- nnnnn.nnnn (space)
+4.2Z

; call MathFixTest ROUTINE at Track 10L to Input a number, 
; then calc f.b.a = f.b.d * Number
K PS @ Y@// R/@/           
T CS
; the number to mutl to f.b.d
; format:  +/- nnnnn.nnnn (space)
+50.3Z

; call MathFixTest ROUTINE at Track 10L to convert f.b.a.
; to AM integral + AL fract, then call DECOUTPUT to print it
K PS @ N/// R/@/           
T CS
; should print 4.2 * 50.3 = 211.25999999

; ********* Test RECIPROCAL

; call MathFixTest ROUTINE at Track 10L to echo ptr to printer input until $ char
K PS @ CA// R/@/
T CS
TEST:NORMALISE/RECIPROCAL$

; call MathFixTest ROUTINE at Track 10L to call DECINPUT, 
; then call CONVERTER to convert to float, then store in float f.b.a.
K PS @ /E// R/@/
T CS
; the input number
; format:  +/- nnnnn.nnnn (space)
+11.2Z

; call ROUTINE to calc x = 1/x
K PS @ $$// Y/@/
T CS

; call MathFixTest ROUTINE at Track 10L to convert f.b.a.
; to AM integral + AL fract, then call DECOUTPUT to print it
K PS @ N/// R/@/           
T CS
; should print 1/11.2 = 0.08928571


; call MathFixTest ROUTINE at Track 10L to call DECINPUT, 
; then call CONVERTER to convert to float, then store in float f.b.a.
K PS @ /E// R/@/
T CS
; the input number
; format:  +/- nnnnn.nnnn (space)
-0.03Z


; call ROUTINE to calc x = 1/x
K PS @ $$// Y/@/
T CS

; call MathFixTest ROUTINE at Track 10L to convert f.b.a.
; to AM integral + AL fract, then call DECOUTPUT to print it
K PS @ N/// R/@/           
T CS
; should print 1/11.2 = -33.333333


; ********* Test SQUARE ROOT

; call MathFixTest ROUTINE at Track 10L to echo ptr to printer input until $ char
K PS @ CA// R/@/
T CS
TEST:SQUAREROOT$

; call MathFixTest ROUTINE at Track 10L to call DECINPUT, 
; then call CONVERTER to convert to float, then store in float f.b.a.
K PS @ /E// R/@/
T CS
; the input number
; format:  +/- nnnnn.nnnn (space)
+2Z

; call ROUTINE to calc x = sqrt(x)
K PS @ $$// P/@/
T CS

; call MathFixTest ROUTINE at Track 10L to convert f.b.a.
; to AM integral + AL fract, then call DECOUTPUT to print it
K PS @ N/// R/@/           
T CS
; should print sqrt(2)=1.41421356


; ********* Test EXPONENTIAL

; call MathFixTest ROUTINE at Track 10L to echo ptr to printer input until $ char
K PS @ CA// R/@/
T CS
TEST:EXPONENTIAL$

; call MathFixTest ROUTINE at Track 10L to call DECINPUT, 
; then call CONVERTER to convert to float, then store in float f.b.a.
K PS @ /E// R/@/
T CS
; the input number
; format:  +/- nnnnn.nnnn (space)
+1Z

; call ROUTINE to calc x = exp(x)
K PS @ $$// O/@/
T CS

; call MathFixTest ROUTINE at Track 10L to convert f.b.a.
; to AM integral + AL fract, then call DECOUTPUT to print it
K PS @ N/// R/@/           
T CS
; should print e^1=2.71828182


; call MathFixTest ROUTINE at Track 10L to call DECINPUT, 
; then call CONVERTER to convert to float, then store in float f.b.a.
K PS @ /E// R/@/
T CS
; the input number
; format:  +/- nnnnn.nnnn (space)
+0Z

; call ROUTINE to calc x = exp(x)
K PS @ $$// O/@/
T CS

; call MathFixTest ROUTINE at Track 10L to convert f.b.a.
; to AM integral + AL fract, then call DECOUTPUT to print it
K PS @ N/// R/@/           
T CS
; should print e^0=1

; call MathFixTest ROUTINE at Track 10L to call DECINPUT, 
; then call CONVERTER to convert to float, then store in float f.b.a.
K PS @ /E// R/@/
T CS
; the input number
; format:  +/- nnnnn.nnnn (space)
+0.5Z

; call ROUTINE to calc x = exp(x)
K PS @ $$// O/@/
T CS

; call MathFixTest ROUTINE at Track 10L to convert f.b.a.
; to AM integral + AL fract, then call DECOUTPUT to print it
K PS @ N/// R/@/           
T CS
; should print e^0.5=1.648721270

; call MathFixTest ROUTINE at Track 10L to call DECINPUT, 
; then call CONVERTER to convert to float, then store in float f.b.a.
K PS @ /E// R/@/
T CS
; the input number
; format:  +/- nnnnn.nnnn (space)
+2Z

; call ROUTINE to calc x = exp(x)
K PS @ $$// O/@/
T CS

; call MathFixTest ROUTINE at Track 10L to convert f.b.a.
; to AM integral + AL fract, then call DECOUTPUT to print it
K PS @ N/// R/@/           
T CS
; should print e^2=7.38905609

; call MathFixTest ROUTINE at Track 10L to call DECINPUT, 
; then call CONVERTER to convert to float, then store in float f.b.a.
K PS @ /E// R/@/
T CS
; the input number
; format:  +/- nnnnn.nnnn (space)
+10.3Z

; call ROUTINE to calc x = exp(x)
K PS @ $$// O/@/
T CS

; call MathFixTest ROUTINE at Track 10L to convert f.b.a.
; to AM integral + AL fract, then call DECOUTPUT to print it
K PS @ N/// R/@/           
T CS
; should print e^10.3=29732.61885289

; call MathFixTest ROUTINE at Track 10L to call DECINPUT, 
; then call CONVERTER to convert to float, then store in float f.b.a.
K PS @ /E// R/@/
T CS
; the input number
; format:  +/- nnnnn.nnnn (space)
-5Z

; call ROUTINE to calc x = exp(x)
K PS @ $$// O/@/
T CS

; call MathFixTest ROUTINE at Track 10L to convert f.b.a.
; to AM integral + AL fract, then call DECOUTPUT to print it
K PS @ N/// R/@/           
T CS
; should print e^-5=0,00673794

; ********* Test NATURALOG

; call MathFixTest ROUTINE at Track 10L to echo ptr to printer input until $ char
K PS @ CA// R/@/
T CS
TEST:NATURALOG$

; call MathFixTest ROUTINE at Track 10L to call DECINPUT, 
; then call CONVERTER to convert to float, then store in float f.b.a.
K PS @ /E// R/@/
T CS
; the input number
; format:  +/- nnnnn.nnnn (space)
+0.5Z

; call ROUTINE to calc x = ln(x)
K PS @ $$// B/@/
T CS

; call MathFixTest ROUTINE at Track 10L to convert f.b.a.
; to AM integral + AL fract, then call DECOUTPUT to print it
K PS @ N/// R/@/           
T CS
; should print ln(0.5)= -0.693147181 -> prints -.69315290


; call MathFixTest ROUTINE at Track 10L to call DECINPUT, 
; then call CONVERTER to convert to float, then store in float f.b.a.
K PS @ /E// R/@/
T CS
; the input number
; format:  +/- nnnnn.nnnn (space)
+0.005Z

; call ROUTINE to calc x = ln(x)
K PS @ $$// B/@/
T CS

; call MathFixTest ROUTINE at Track 10L to convert f.b.a.
; to AM integral + AL fract, then call DECOUTPUT to print it
K PS @ N/// R/@/           
T CS
; should print ln(0.005)= -5,298317367 -> prints -5.29831988

; call MathFixTest ROUTINE at Track 10L to call DECINPUT, 
; then call CONVERTER to convert to float, then store in float f.b.a.
K PS @ /E// R/@/
T CS
; the input number
; format:  +/- nnnnn.nnnn (space)
+1Z

; call ROUTINE to calc x = ln(x)
K PS @ $$// B/@/
T CS

; call MathFixTest ROUTINE at Track 10L to convert f.b.a.
; to AM integral + AL fract, then call DECOUTPUT to print it
K PS @ N/// R/@/           
T CS
; should print ln(1)=0 -> prints -.00000572


; call MathFixTest ROUTINE at Track 10L to call DECINPUT, 
; then call CONVERTER to convert to float, then store in float f.b.a.
K PS @ /E// R/@/
T CS
; the input number
; format:  +/- nnnnn.nnnn (space)
+10Z

; call ROUTINE to calc x = ln(x)
K PS @ $$// B/@/
T CS

; call MathFixTest ROUTINE at Track 10L to convert f.b.a.
; to AM integral + AL fract, then call DECOUTPUT to print it
K PS @ N/// R/@/           
T CS
; should print ln(10)=2.302585093 -> prints +2.30258222


; call MathFixTest ROUTINE at Track 10L to call DECINPUT, 
; then call CONVERTER to convert to float, then store in float f.b.a.
K PS @ /E// R/@/
T CS
; the input number
; format:  +/- nnnnn.nnnn (space)
+2000000Z

; call ROUTINE to calc x = ln(x)
K PS @ $$// B/@/
T CS

; call MathFixTest ROUTINE at Track 10L to convert f.b.a.
; to AM integral + AL fract, then call DECOUTPUT to print it
K PS @ N/// R/@/           
T CS
; should print ln(2M)=14,50865774 -> prints +14.50866238

; ********* Test COSINE

; call MathFixTest ROUTINE at Track 10L to echo ptr to printer input until $ char
K PS @ CA// R/@/
T CS
TEST:COS$

; call MathFixTest ROUTINE at Track 10L to call DECINPUT, 
; then call CONVERTER to convert to float, then store in float f.b.a.
K PS @ /E// R/@/
T CS
; the input number
; format:  +/- nnnnn.nnnn (space)
+0Z

; call ROUTINE to calc x = cos(2pi.x)
K PS @ $$// Q/@/
T CS

; call MathFixTest ROUTINE at Track 10L to convert f.b.a.
; to AM integral + AL fract, then call DECOUTPUT to print it
K PS @ N/// R/@/           
T CS
; should print cos(0)= 1 -> prints +.99999999

; call MathFixTest ROUTINE at Track 10L to call DECINPUT, 
; then call CONVERTER to convert to float, then store in float f.b.a.
K PS @ /E// R/@/
T CS
; the input number
; format:  +/- nnnnn.nnnn (space)
+0.1Z

; call ROUTINE to calc x = cos(x)
K PS @ $$// Q/@/
T CS

; call MathFixTest ROUTINE at Track 10L to convert f.b.a.
; to AM integral + AL fract, then call DECOUTPUT to print it
K PS @ N/// R/@/           
T CS
; should print cos(2*pi*0.1)= cos(36gr) = 0.809016994 -> prints +.80901699

; call MathFixTest ROUTINE at Track 10L to call DECINPUT, 
; then call CONVERTER to convert to float, then store in float f.b.a.
K PS @ /E// R/@/
T CS
; the input number
; format:  +/- nnnnn.nnnn (space)
+0.2Z

; call ROUTINE to calc x = cos(x)
K PS @ $$// Q/@/
T CS

; call MathFixTest ROUTINE at Track 10L to convert f.b.a.
; to AM integral + AL fract, then call DECOUTPUT to print it
K PS @ N/// R/@/           
T CS
; should print cos(2*pi*0.2)= cos(72gr) = 0,30901699 -> prints +.30901699

; call MathFixTest ROUTINE at Track 10L to call DECINPUT, 
; then call CONVERTER to convert to float, then store in float f.b.a.
K PS @ /E// R/@/
T CS
; the input number
; format:  +/- nnnnn.nnnn (space)
+0.25Z

; call ROUTINE to calc x = cos(x)
K PS @ $$// Q/@/
T CS

; call MathFixTest ROUTINE at Track 10L to convert f.b.a.
; to AM integral + AL fract, then call DECOUTPUT to print it
K PS @ N/// R/@/           
T CS
; should print cos(2*pi*0.25)= cos(90gr) = 0 -> prints +.

; call MathFixTest ROUTINE at Track 10L to call DECINPUT, 
; then call CONVERTER to convert to float, then store in float f.b.a.
K PS @ /E// R/@/
T CS
; the input number
; format:  +/- nnnnn.nnnn (space)
+0.3Z

; call ROUTINE to calc x = cos(x)
K PS @ $$// Q/@/
T CS

; call MathFixTest ROUTINE at Track 10L to convert f.b.a.
; to AM integral + AL fract, then call DECOUTPUT to print it
K PS @ N/// R/@/           
T CS
; should print cos(2*pi*0.3)= cos(108gr) = -0,30901699 -> prints -.30901699

; call MathFixTest ROUTINE at Track 10L to call DECINPUT, 
; then call CONVERTER to convert to float, then store in float f.b.a.
K PS @ /E// R/@/
T CS
; the input number
; format:  +/- nnnnn.nnnn (space)
+0.4Z

; call ROUTINE to calc x = cos(x)
K PS @ $$// Q/@/
T CS

; call MathFixTest ROUTINE at Track 10L to convert f.b.a.
; to AM integral + AL fract, then call DECOUTPUT to print it
K PS @ N/// R/@/           
T CS
; should print cos(2*pi*0.4)= cos(144gr) = -0,80901699 -> prints -.80901699

; call MathFixTest ROUTINE at Track 10L to call DECINPUT, 
; then call CONVERTER to convert to float, then store in float f.b.a.
K PS @ /E// R/@/
T CS
; the input number
; format:  +/- nnnnn.nnnn (space)
+0.5Z

; call ROUTINE to calc x = cos(x)
K PS @ $$// Q/@/
T CS

; call MathFixTest ROUTINE at Track 10L to convert f.b.a.
; to AM integral + AL fract, then call DECOUTPUT to print it
K PS @ N/// R/@/           
T CS
; should print cos(2*pi*0.5)= cos(180gr) = -1 -> prints -.99999999


; ********* Test ARCTANGENT

; call MathFixTest ROUTINE at Track 10L to echo ptr to printer input until $ char
K PS @ CA// R/@/
T CS
TEST:ARCTAN$

; call MathFixTest ROUTINE at Track 10L to call DECINPUT, 
; then call CONVERTER to convert to float, then store in float f.b.a.
K PS @ /E// R/@/
T CS
; the input number
; format:  +/- nnnnn.nnnn (space)
+0Z

; call ROUTINE to calc x = atan(x)/pi
K PS @ $$// G/@/
T CS

; call MathFixTest ROUTINE at Track 10L to convert f.b.a.
; to AM integral + AL fract, then call DECOUTPUT to print it
K PS @ N/// R/@/           
T CS
; should print atan(0)/pi= 0 -> prints +.

; call MathFixTest ROUTINE at Track 10L to call DECINPUT, 
; then call CONVERTER to convert to float, then store in float f.b.a.
K PS @ /E// R/@/
T CS
; the input number
; format:  +/- nnnnn.nnnn (space)
+0.1Z

; call ROUTINE to calc x = atan(x)/pi
K PS @ $$// G/@/
T CS

; call MathFixTest ROUTINE at Track 10L to convert f.b.a.
; to AM integral + AL fract, then call DECOUTPUT to print it
K PS @ N/// R/@/           
T CS
; should print atan(0.1)/pi= 0,03172551 -> prints +.03172551

; call MathFixTest ROUTINE at Track 10L to call DECINPUT, 
; then call CONVERTER to convert to float, then store in float f.b.a.
K PS @ /E// R/@/
T CS
; the input number
; format:  +/- nnnnn.nnnn (space)
+0.2Z

; call ROUTINE to calc x = atan(x)/pi
K PS @ $$// G/@/
T CS

; call MathFixTest ROUTINE at Track 10L to convert f.b.a.
; to AM integral + AL fract, then call DECOUTPUT to print it
K PS @ N/// R/@/           
T CS
; should print atan(0.2)/pi= 0,062832958189 -> prints +.06283295

; call MathFixTest ROUTINE at Track 10L to call DECINPUT, 
; then call CONVERTER to convert to float, then store in float f.b.a.
K PS @ /E// R/@/
T CS
; the input number
; format:  +/- nnnnn.nnnn (space)
+0.5Z

; call ROUTINE to calc x = atan(x)/pi
K PS @ $$// G/@/
T CS

; call MathFixTest ROUTINE at Track 10L to convert f.b.a.
; to AM integral + AL fract, then call DECOUTPUT to print it
K PS @ N/// R/@/           
T CS
; should print atan(0.5)/pi= 0,14758361765 -> prints +.14758361

; call MathFixTest ROUTINE at Track 10L to call DECINPUT, 
; then call CONVERTER to convert to float, then store in float f.b.a.
K PS @ /E// R/@/
T CS
; the input number
; format:  +/- nnnnn.nnnn (space)
+1Z

; call ROUTINE to calc x = atan(x)/pi
K PS @ $$// G/@/
T CS

; call MathFixTest ROUTINE at Track 10L to convert f.b.a.
; to AM integral + AL fract, then call DECOUTPUT to print it
K PS @ N/// R/@/           
T CS
; should print atan(1)/pi= 0,25 -> prints +.250000000

; call MathFixTest ROUTINE at Track 10L to call DECINPUT, 
; then call CONVERTER to convert to float, then store in float f.b.a.
K PS @ /E// R/@/
T CS
; the input number
; format:  +/- nnnnn.nnnn (space)
+1Z

; call ROUTINE to calc x = atan(x)/pi
K PS @ $$// G/@/
T CS

; call MathFixTest ROUTINE at Track 10L to convert f.b.a.
; to AM integral + AL fract, then call DECOUTPUT to print it
K PS @ N/// R/@/           
T CS
; should print atan(1)/pi= 0,25 -> prints +.250000000


; call MathFixTest ROUTINE at Track 10L to call DECINPUT, 
; then call CONVERTER to convert to float, then store in float f.b.a.
K PS @ /E// R/@/
T CS
; the input number
; format:  +/- nnnnn.nnnn (space)
+2Z

; call ROUTINE to calc x = atan(x)/pi
K PS @ $$// G/@/
T CS

; call MathFixTest ROUTINE at Track 10L to convert f.b.a.
; to AM integral + AL fract, then call DECOUTPUT to print it
K PS @ N/// R/@/           
T CS
; should print atan(2)/pi= 0,3524163823 -> prints +.35241638


; call MathFixTest ROUTINE at Track 10L to call DECINPUT, 
; then call CONVERTER to convert to float, then store in float f.b.a.
K PS @ /E// R/@/
T CS
; the input number
; format:  +/- nnnnn.nnnn (space)
+10Z

; call ROUTINE to calc x = atan(x)/pi
K PS @ $$// G/@/
T CS

; call MathFixTest ROUTINE at Track 10L to convert f.b.a.
; to AM integral + AL fract, then call DECOUTPUT to print it
K PS @ N/// R/@/           
T CS
; should print atan(10)/pi= 0,468274482 -> prints +.46827448

; call MathFixTest ROUTINE at Track 10L to call DECINPUT, 
; then call CONVERTER to convert to float, then store in float f.b.a.
K PS @ /E// R/@/
T CS
; the input number
; format:  +/- nnnnn.nnnn (space)
+100Z

; call ROUTINE to calc x = atan(x)/pi
K PS @ $$// G/@/
T CS

; call MathFixTest ROUTINE at Track 10L to convert f.b.a.
; to AM integral + AL fract, then call DECOUTPUT to print it
K PS @ N/// R/@/           
T CS
; should print atan(100)/pi= 0,49681700 -> prints +.49681700


