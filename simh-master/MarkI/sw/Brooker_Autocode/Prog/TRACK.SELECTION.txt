   
     MANCHESTER UNIVERSITY COMPUTING MACHINE LABORATORY
    
     Programme Sheet B                  Date. 23.May.1955

    
    [TRACK SELECTION (Tube 5 material)  ] p48

    [Col  R    ]                        [     J    ]              
                ___                                                       
    | / |      | n3                     | / | $A// |                                         
    | E |      |___                     | E | /:@N |               
    | @ |      | n4                   ->| @ | EJT: |         enter with   /C                 
    | A |      |___                     | A | X:/N | x 2^14             n,QO               
    | : |      | n5                     | : | /JTC |                    @J/P                
    | S |      |___                     | S | @ITA |                                        
    | I |      | n6                     | I | AI/: |___                                     
    | U |      |___                   ->| U | /#QG |         enter with   /C
    | # |      | n7                     | # | //ZZ |                    n,QO or n,$O        
    | D |      |___                     | D | LJ/T | jump if            RJ/P                
    | R |      | n8                     | R | IJT: |\   entry was througt n,$O            
    | J |      |___                     | J | A:/N |! isolate line digits
    | N |      | n9                     | N | /JTR |/              
    | F |      |___                     | F | @ITA |\ set these digits in B7
    | C |      | n10                    | C | @IQO |/              
    | K |      |___                     | K | /NQ/ |\ select lines required
    | T |      | n11                    | T | @NUJ |/              
    | Z |      |___                     | Z | //EP |___        
    | L |      | n12                    | L | ZJT: |               
    | W |      |___                     | W | A:/N |\              
    | H |      | n13                    | H | /JTR |! isolate line digits
    | Y |      |___                     | Y | @ITA |/              
    | P |      | n14                    | P | @IQO | set B7                             
    | Q |      |___                     | Q | X:/N |\                                   
    | O |      | n15                    | O | /JTC |! forms transfer for                
    | B |      |___                     | B | G:TC |!  variable in question             
    | G |      | n16                    | G | @ITA |/                                   
    | " |      |___                     | " | #IT/ |\                                   
    | M |      | n17                    | M | RI/J |! plant variable
    | X |      |___                     | X | /NUU |!              
    | V |      | n18                    | V | @NUU |/              
    | $ |      |                        | $ | //EP |               
                                                                                 
    [End]

Note by Roberto Sancho: indexes "na" are stored as integers, 2 short lines per index
    starting at address [MD, XD] for n1, [VD, $D] for n2, [/R, ER] for n3 and so
    on up to n18. Index higher will overwrite the Track Selection routine. No error 
    checking if done at compile time or at run time to prevent this.

  352  /J  $A//  
  353  EJ  /:@N  
  
                 Enter to read/store indexed var 
                 D=index value (if index n=1 in autocode prog, 
                 its contents in memory is x2 -> D=2)
                 
  354  @J  EJT:  A=0 
  355  AJ  X:/N  A=Shift D
  356  :J  /JTC  AL=AL + $A// /:@N -> form cue to read data track where var v(n) is stored
  357  SJ  @ITA  Save in temp [@I, AI]. [AI]=mag instr, [@I]=var offset into data track
  358  IJ  AI/:  read data track using calculated mag instr in [AI] in cols N F C K
  359  UJ  /#QG  B7=B7-$$VO (/# addr is a constant in ADD&Sub routine, loaded in runtime at col # D)
  360  #J  //ZZ  Store return address in RCS stack at [B1]
  361  DJ  LJ/T  if (B>=0) goto 370 -> jump if entry was througt n,$O
  362  RJ  IJT:  
  363  JJ  A:/N  
  364  NJ  /JTR  
  365  FJ  @ITA  
  366  CJ  @IQO  
  367  KJ  /NQ/  
  368  TJ  @NUJ  
  369  ZJ  //EP  
  
  370  LJ  ZJT:  A=0
  371  WJ  A:/N  A=Shift D
  372  HJ  /JTR  AL=AL AND $A// ....
  373  YJ  @ITA  [@I]=AL -> offset of var in mem 
  374  PJ  @IQO  B7=[@I]
  375  QJ  X:/N  A=Shift D
  376  OJ  /JTC  AL=AL+$A// /:@N -> cue for data track of var
  377  BJ  G:TC  AL=AL+//#/ -> add write bit to mag instr
  378  GJ  @ITA  [@I, AI]=save cue to write back var to drum (to be used later, outside of this routine)
  379  "J  #IT/  AL=[#I, DI] = f.b.a mantisa (floating point accumulator)
  380  MJ  RI/J  AM=[RI, JI] = f.b.a exponent
  381  XJ  /NUU  [/N + B7]=AL -> write f.b.a float value in data track image
  382  VJ  @NUU  [@N + B7]=AM    in mem in cols N F C K
  383  $J  //EP  return to caller
