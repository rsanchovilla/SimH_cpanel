   
     MANCHESTER UNIVERSITY COMPUTING MACHINE LABORATORY
    
     Programme Sheet B                  Date. 18.May.1955

    
    [Routine INPUT(1)      ] p5

    [Col  @    ]                        [     A    ]              
                                                                          
    | / | HE// |                        | / | YIQB | sets j switch                           
    | E | USQO | sets x switch          | E | ZD/P |___            
    | @ | SIQB |                        | @ | E:QO | (x)                                    
    | A | IDPO | B6=:I//                | A | LD/P |___                                     
    | : | ZD/P |___ to set non dec.sw   | : | A:QO | (Y)                                    
    | S | DDQO | (*)                    | S | LD/P |___                                     
    | I | J@/P |___                     | I | JDQO | (Z)                                    
    | U | NSQO | (/)                    | U | LD/P |___            
    | # | J@/P |___                     | # | S:QO | (H)                                    
    | D | DSQO | (+) there are 2 alter- | D | LD/P |___                                     
    | R | J@:P |___  natives: the +     | R | NDQO | (T)                                    
    | J | PE// | (-) operation and the  | J | LD/P |___            
    | N | U/// |     + sign. same for   | N | FDQO | (I)           
    | F | C@:P |___  minus              | F | BIQB | plant code num describing 
    | C | YE// | operation              | C | J//P |___ the special operations
    | K | K@// | sign                   | K | E:QO | (             
    | T | TDWO |                        | T | E:/Q |___            
    | Z | B#/P |___                     | Z | A:QO | )             
    | L | USQO | (v)                    | L | "D/: | xfer directory to 6,7
    | W | AIQB |                        | W | MKQB | sets bracket switch
    | H | Y@:P |___ (n)                 | H | GD/: |               
    | Y | P@// |                        | Y | J//P |___(P)           
    | P | B@// |                        | P | USQO | sets p switch                                   
    | Q | #DPO | B6=TI//                | Q | GIQB |                                    
    | O | USQO | set n switch           | O | J//P |___                                 
    | B | ZIQB |                        | B | /:QO | (Q)                                
    | G | //P/ | v,n count              | G | @IQB | sets asterisk switch                                   
    | " | E:TC |                        | " | J//P |___ for complex operations                             
    | M | //PA |                        | M | SITB |               
    | X | ZD/P |___                     | X | HD/P |               
    | V | SDPO | (j) B6=HI//            | V | @EEI | mag instr load S3 (col I) vars
    | $ | USQO |                        | $ | EE@# | mag instr load S4 S5 (# D R J) INPUT2
                                                                                 
    [End]

Note by Roberto Sancho: There is some confussion on code on Q switch for
    complex mode.
    - initial value on VARS.TXT is set to ///T as complex mode not set. 
    - On INPUT(1), Q mode is set by assigning the value ///T to [@I]. 
    - TRANSLATE(7) will check Q mode set if [@I] value is ////
    - ECONOMISE(1) will check Q mode set if [@I] value is ///T
    There is two conflicting interpretations on Q switch. 
    We choose to change INPUT(1) and ECONOMISE so Q mode is set 
    when [@I]=////, that are the least invading solution.
    There are probably some missing modifications to the original source. 

        addr  original value   new value
        BA    USQO             /:QO         B7=0 instead of B7=///T
   

