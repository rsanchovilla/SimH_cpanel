   
     MANCHESTER UNIVERSITY COMPUTING MACHINE LABORATORY
    
     Programme Sheet B                  Date. 18.May.1955

    
    [Routine TRANS(1)      ] p8-p9

    [Col  /    ]                        [     E    ]              
                                                                          
    | / | //// |                        | / | /NQB |                                         
    | E |      |                        | E | II/C |               
    | @ |      |                        | @ | TST: |                                        
    | A |      |                        | A | $:/N | x2^15                                  
    | : |      |                        | : | ZATC |                                        
    | S |      |                        | S | GKTA | plant reading instr for                
    | I |      |                        | I | S:/N |  trans in question                     
    | U |      |                        | U | TATR |               
    | # |      |                        | # | /U/S |                                        
    | D |      |                        | D | EUTA |                                        
    | R |      |                        | R | /UT/ |                                        
    | J |      |                        | J | CATC |               
    | N |      |                        | N | @NTA |               
Entr| F |      |___                     | F | AA/P |___            
 -> | C | SIQO |\ Examines x            | C | IITK |               
    | K | :A/T |/  switch               | K | RATC |               
    | T | AIQO |\ examines n/v          | T | ENTA |               
    | Z | SA/T |/  switch               | Z | NAQO |               
    | L | :IQO |\ a v type x            | L | ANQB |___            
    | W | IAUP |/__                     | W | OIQO |               
    | H | OAT/ |\ plant cue to special  | H | @AQG | +2            
    | Y | @/ZA |/ conversion routine    | Y | V@T/ | prepare to plant #I#U
    | P | IIT/ |\ prepare to convert    | P | E:/O |                  RI#U              
    | Q | #I/J |/ constant              | Q | /AT/ | prepare to plant :I#U             
    | O | O/QO |\ convert               | O | :NTA |                  II#U              
    | B | KS/P |/                       | B | JIQO |                                    
    | G | MK/U |\ plant contant in      | G | GAT/ | cue to TRANS(4)                    
    | " | VK/U |/ instr matrix          | " | E:/O | examine y switch                 
    | M | WAT/ |\ plant MAO/ = do       | M | VAT/ | cue to TRANS(2)
    | X | @NTA |/       VA/J            | X | //ZA |               
    | V | AA/P |___                     | V | @E/P |___            
    | $ | FAQO |                        | $ | IITK |               
                                                                                 
    [End]

   0  //  ////    
   1  E/         
   2  @/         
   3  A/         
   4  :/         
   5  S/         
   6  I/         
   7  U/         
   8  #/         
   9  D/         
  10  R/        
  11  J/        
  12  N/        
  13  F/        
                Entry from TRANSLATE(7)

  14  C/  SIQO  B7=[SI] -> [SI]=x switch
  15  K/  :A/T  if (B>=0) goto 71 -> goto TRANSLATE(6) if no x value

  16  T/  AIQO  B7=[AI] -> [AI]=n/v switch for x 
  17  Z/  SA/T  if (B>=0) goto 63 -> goto if x is n index

                x is a or va or vna

  18  L/  :IQO  B7=[:I] -> [:I]=n/v count for x
  19  W/  IAUP  if (B7=0) goto 20 -> x is a constant for var
                if (B7=1)      31 -> x is va variable
                if (B7=2)      46 -> x is vna variable indexed

                x is a constant for variable (a float contant)

  20  H/  OAT/  AL=[OA]=$$// @E// cue to CONVTR (SPECIAL)
  21  Y/  @/ZA  Store cue at addr [B1]
  22  P/  IIT/  AL=[II]=integral part of x
  23  Q/  #I/J  AM=[#I]=exp part of x 
  24  O/  O/QO  B7=*
  25  B/  KS/P  goto 173. call RCS as sub-routine
  26  G/  MK/U  [MK, XK]=AL, AL=AM, AM=0 -> plant mantissa in instr matrix
  27  "/  VK/U  [VK, $K]=AL, AL=AM, AM=0 -> plant exponent in instr matrix
  28  M/  WAT/  AL=[WA]=MAO/ VA/J 
  29  X/  @NTA  [@N]=AL -> plant instr 
  30  V/  AA/P  goto 51

                x is a variable va

  31  $/  FAQO  B7="A#:
  32  /E  /NQB  [/N]=B7 -> plant instr
  33  EE  II/C  D=[II] = a/// = integral x = the variable number a
  34  @E  TST:  A=0
  35  AE  $:/N  Shift -> AL=///a
  36  :E  ZATC  AL=AL+[ZA]=///a /:@N -> cue to access the variable
  37  SE  GKTA  [GK]=AL -> plant cue
  38  IE  S:/N  AL= D*4 = a*4 -> offset of var into data track as each var uses 4 short lines
  39  UE  TATR  AL=AL AND 127
  40  #E  /U/S  [/U]=AL -> offset into data track
  41  DE  EUTA  [EU]=AL again
  42  RE  /UT/  AL=[/U]=n/// n///
  43  JE  CATC  AL=AL+ /NO/ @N/J -> add offset to instr
  44  NE  @NTA  [@N]=AL -> plant instr
  45  FE  AA/P  goto 51

                x is a variable vna

  46  CE  IITK  A=2*[II], [II]=integral part of x = index number a
  47  KE  RATC  AL=AL+ GD#C /TQO -> read index value
  48  TE  ENTA  [EN]=AL -> plant instr
  49  ZE  NAQO  B7=@J/P
  50  LE  ANQB  [AN]=B7 -> plant instr

  51  WE  OIQO  B7=[OI] = num for main op (see VARS.TXT) default=0 -> simple transfer
  52  HE  @AQG  B7=B7+2
  53  YE  V@T/  AL=#I#U RI#U -> save acc in fba
  54  PE  E:/O  if (B>=0) goto 56
  55  QE  /AT/          II   -> save acc in fbd

  56  OE  :NTA  [:N]=AL -> plant instr 
  57  BE  JIQO  B7=[JI] = y switch
  58  GE  GAT/  AL=[GA]=$$// UE@/ -> cue to TRANSLATE(4)
  59  "E  E:/O  if (B>=0) goto 61 -> if y switch = 0 (i.e. no y part on 
                                     autocode sentence) then goto TRANSLATE(4)
  60  ME  VAT/  AL=[VA]=$$// SE@/ -> cue to TRANSLATE(2). autocode sentence has y part
                                     goto TRANSLATE(2) to process it
  61  XE  //ZA  Store cue in [B1]
  62  VE  @E/P  goto 177 -> call RCS as ad-routine

                x is a or na   

  63  $E  IITK  AL=2*[II] -> AL=2a = int part of x
  64  /@  :IQO  B7=[:I] -> B7= v/n count for x (cannot be 2)
  65  E@  M@UP  if (B7=0) goto 68 -> x is a const for index
                    B7=1  goto 66 -> x is index na  

                x is na index
  66  @@  G@TC  AL=AL+GDO/ :IOA
  67  A@  P@/P  goto 56

                x is a constant for index (an integer contant)
  68  :@  MKTA  [MK, XK]=AL=2a -> save addr of index n (2 short lines per index)
  69  S@  O@T/  AL=MAO/ :IOA
  70  I@  P@/P  goto 56
 
                no x value -> it is an incidental operation
  71  U@  MAT/  AL=[MA]=$$// DE@/ -> cue to TRANSLATE(6) entry to process incidental operation
  72  #@  Q@/P  goto 61

  73  D@        
  74  R@        
  75  J@        
  76  N@        
  77  F@        
  78  C@        
  79  K@        
  80  T@        
  81  Z@        
  82  L@        
  83  W@        
  84  H@        
  85  Y@        
  86  P@  QE//  
  87  Q@  ME//  
  88  O@  MAO/  
  89  B@  :IOA  
  90  G@  GDO/  
  91  "@  :IOA  
  92  M@  A@//  
  93  X@  E@//  
  94  V@  #I#U  
  95  $@  RI#U  
  96  /A  :I#U  
  97  EA  II#U  
  98  @A  V$$$  
  99  AA  LE//  
 100  :A  I@//  
 101  SA  VE//  
 102  IA  W///  
 103  UA  V///  
 104  #A  FE//  
 105  DA  F///  
 106  RA  GD#C  
 107  JA  /TQO  
 108  NA  @J/P  
 109  FA  "A#:  
 110  CA  INO/  
 111  KA  @N/J  
 112  TA  $A//  
 113  ZA  ////  
 114  LA  /:@N  
 115  WA  MAO/  
 116  HA  VA/J  
 117  YA  /@R#  
 118  PA  /@@#  
 119  QA  K/@#  
 120  OA  $$//  
 121  BA  @E//  
 122  GA  $$//  
 123  "A  UE@/  
 124  MA  $$//  
 125  XA  DE@/  
 126  VA  $$//  
 127  $A  SE@/  


