   
     MANCHESTER UNIVERSITY COMPUTING MACHINE LABORATORY
    
     Programme Sheet B                  

    
    [Routine COMPLEX CARTESIAN TO POLAR ] 

    [Col  /    ]                        [     E    ]              
                                                                          
    | / | #IT/ | AL=[#I] copy fba       | / | NFT/ | AL=[NF] copy saved radius back to fbd                                          
    | E | #FTA | [#F]=AL x real (a)     | E | :ITA | [:I]=AL result imaginary part                       
    | @ | RIT/ | AL=[RI] mantisa        | @ | CFT/ | AL=[CF] mantissa                                                             
    | A | RFTA | [RF]=AL exp            | A | IITA | [II]=AL exp                                                                  
    | : | :IT/ | AL=[:I] copy fbd       | : | $$$$ |                                                                              
    | S | :FTA | [:F]=AL x imag (b)     | S | LS/P | closure                                                                      
    | I | IIT/ | AL=[II] mantisa        | I |      |                                        
    | U | IFTA | [IF]=AL exp            | U |      |               
    | # | $$$$ |                        | # |      |                                        
    | D | //O: | A=0                    | D |      |                                        
    | R | ME/J | AM=cue to RADIUS       | R |      |                                        
    | J | J/QO | B7=*                   | J |      |               
    | N | FS/P | call RSC as sub        | N |      |               
    | F | #IT/ | AL=[#I] save fba result| F |      |               
    | C | NFTA | [NF]=AL = radius       | C |      |               
    | K | RIT/ | AL=[RI] mantissa       | K |      |               
    | T | CFTA | [RF]=AL exp            | T |      |               
    | Z | $$$$ |                        | Z |      |               
    | L | #FT/ | AL=[#F] copy x (a)     | L |      |               
    | W | #ITA | [#I]=AL into fba       | W |      |               
    | H | RFT/ | AL=[RF] mantissa       | H |      |               
    | Y | RITA | [RI]=AL exp            | Y |      |               
    | P | :FT/ | AL=[:F] copy x imag (b)| P |      |                                    
    | Q | :ITA | [:I]=AL into fbd       | Q |      |                                    
    | O | IFT/ | AL=[IF] mantissa       | O |      |                                    
    | B | IITA | [II]=AL exp            | B |      |                                    
    | G | $$$$ |                        | G |      |                                    
    | " | //O: | A=0                    | " |      |                                    
    | M | VE/J | AM=cue to ANGLE        | M | #@// | cue to               
    | X | X/QO | B7=*                   | X | LE@/ | RADIUS              
    | V | FS/P | call RSC as sub        | V | S/// | cue to               
    | $ | $$$$ |                        | $ | LE@/ | ANGLE              
                                                                               
    [End]

                Convert rectangular to Polar on imaginary numbers
                function parameter x = (a + bi)
                
                on entry: 
    		[#I, DI] = f.b.a mantisa -> real part (a)
                [RI, JI] = f.b.a exponent
                [:I, SI] = f.b.d mantisa -> imaginary part (b)
                [II, UI] = f.b.d exponent
                
                on exit:
                fba = real part of result = angle  
                fbd = imaginary part of result = radius
                
                angle  = arctan(b/a)
                radius = sqrt(a*a + b*b)
      