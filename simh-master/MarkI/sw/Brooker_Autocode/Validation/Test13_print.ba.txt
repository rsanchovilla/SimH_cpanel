1
                   ; test printing 

   XY              ;
 * n1 = 100013     ; print integer +100013.
                   ; -> this is the code of test
   XY              ;
   

   n1=1 
  *n1=n1x10
  *n1=n1x10
  *n1=n1x10
  *n1=n1x10
  *n1=n1x10
  *n1=n1x10
  *n1=n1x10
  *n1=n1x10
  *n1=n1x10
  *n1=n1x10
  *=n1x10          ; no z value -> print int expr n1 x 10
  *=222            ; no z value -> print 123 as integer
                   ; should print +10.
                   ; should print +100.
                   ; should print +1000.
                   ; should print +10000.
                   ; should print +100000.
                   ; should print +1000000.
                   ; should print +10000000.
                   ; should print +100000000.
                   ; should print +1000000000.
                   ; should print +10000000000.
                   ; should print +100000000000.
                   ; should print +222.

   XY              ;
      n1=1 
    P =n1
    P n1=n1x10
    P n1=n1x10
    P n1=n1x10
  XYP n1=n1x10
    P n1=n1x10
    P n1=n1x10
    P n1=n1x10
  XYP n1=n1x10
    P n1=n1x10
    P n1=n1x10
    P n1=n1x10
  *=333
                   ; should print +1. +10. +100. +1000.
                   ; should print +10000. +100000. +1000000. +10000000.
                   ; should print +100000000. +1000000000. +10000000000. +100000000000.
                   ; should print +333.

   XY              ;
   v1=1/3 
  *=v1
  *v1=v1x100
  *v1=v1x100
  *v1=v1x100
  *v1=v1x100
  *v1=v1x100
  *v1=v1x100
  *=v1x10          
  *=444            
                   ; should print +.33333
                   ; should print +33.33333
                   ; should print +3333.33333
                   ; should print +333333.33333
                   ; should print +33333333.33325
                   ; should print +3333333333.32812
                   ; should print +.30316 +40. <-- print binary float for number too big
                   ; should print +.37895 +43.
                   ; should print +444.

   XY              ;
   v1=22/7 
  *=v1
  *v1=v1/100
  *v1=v1/100
  *v1=v1/100
  *v1=v1/100
  *v1=v1/100
  *v1=v1/100
  *=v1/10          
  *=555            
                   ; should print +3.14285
                   ; should print +.03142
                   ; should print +.00031
                   ; should print +.00000
                   ; should print +.00000
                   ; should print +.00000
                   ; should print +.00000
                   ; should print +.      <-- number too small
                   ; should print +555.


   XY
   XY
   P =7890         ; using P char + integer 01001 01101 11100 LPU
   P n2=1234         

   XY
   P v1=7890       ; using P char + float
   P v2=1234         

   XY
   P v1=0.07890    ; using P char + float
   P v2=0.01234         

   XY
   ZZ
   P v1=0.07890   
   ZZZ             ; inserting separation spaces
   P v2=0.01234         

   XY
   XY

  v1=1/3 
  P=v1
  Pv1=v1x100
  Pv1=v1x100
XYPv1=v1x100
  Pv1=v1x100
  Pv1=v1x100
XYPv1=v1x100
  P=v1x10          
  P=666          
                   ; should print +.33333 +33.33333 +3333.33333
                   ; should print +333333.33333 +33333333.33325 +3333333333.32812
                   ; should print # # +666.

   XY              
   XY              
   v1=22/7 
  P=v1
  P v1=v1/100
XYP v1=v1/100
  P v1=v1/100
XYP v1=v1/10000
  P =v1/1000000          
XYP =777            
                   ; should print +3.14285 +.03142
                   ; should print +.00031 +.00000
                   ; should print +.00000 0
                   ; should print +777.



     (j1)
