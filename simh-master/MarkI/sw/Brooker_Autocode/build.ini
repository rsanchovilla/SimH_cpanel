
  set console -n -q log=console.txt 
; set debug -n -q debug.txt

; set cpu debug=CMD;DATA;DETAIL;EXP

echo
echo ***
echo *** Build R.A.Brooker Autocode (1954-July 1955)
echo ***
echo *** Type in the routines code on the Offline Perforator and get 
echo *** each routine punched on PaperTape 
echo ***
echo

; prepare a routine to be loaded later at a given drum track
; use the offline Perforator to punch the routine in paper tape
; setup Perforator settings
set Perforator echo
set Perforator use_wc_k

; attach papertape to punch
att -q -n Perforator Tapes/BAutoCode.pt.txt

typein line     //////CCCCCC//////

typein line     K "SA INPUT/ONE///
typein routine  Prog/INPUT.1A.txt     S4        
typein routine  Prog/INPUT.1B.txt     S5        
typein line     M /ER#                  ; Save to track 32LR (chars /E), loads in cols /E@A 
typein line     K "SA INPUT/TWO///
typein routine  Prog/INPUT.2A.txt     S4        
typein routine  Prog/INPUT.2B.txt     S5        
typein line     M EER#                  ; Save to track 33LR (chars EE), loads in cols #DRJ

typein line     K "SA CONVTR/SPECL
typein routine  Prog/CONVTR.txt       S4        
typein line     M @E##                  ; Save to track 34L (chars @E), loads in cols /E

typein routine  Prog/VARS.txt         S4        
typein line     M @ED#                  ; Save to track 34R (chars @E), loads in cols IU

typein line     K "SA INSTR/MATRIX
typein routine1 Prog/INSTR.MATRIX.txt S4 
typein routine2 Prog/INSTR.MATRIX.txt S5
typein line     M AER#                  ; Save to track 35LR (chars AE), loads in cols NFCK

typein line     K "SA TRANS/ONE///
typein routine  Prog/TRANS.1A.txt     S4        
typein routine  Prog/TRANS.1B.txt     S5 
typein line     M :ER#                  ; Save to track 36LR (chars :E), loads in cols /E@A 
typein line     K "SA TRANS/TWO///
typein routine  Prog/TRANS.2A.txt     S4        
typein routine  Prog/TRANS.2B.txt     S5 
typein line     M SER#                  ; Save to track 37LR (chars SE), loads in cols /E@A 
typein line     K "SA TRANS/THREE/
typein routine  Prog/TRANS.3A.txt     S4        
typein routine  Prog/TRANS.3B.txt     S5 
typein line     M IER#                  ; Save to track 38LR (chars IE), loads in cols /E@A 
typein line     K "SA TRANS/FOUR//
typein routine  Prog/TRANS.4A.txt     S4        
typein routine  Prog/TRANS.4B.txt     S5 
typein line     M UER#                  ; Save to track 39LR (chars UE), loads in cols /E@A 
typein line     K "SA TRANS/FIVE//
typein routine  Prog/TRANS.5A.txt     S4        
typein routine  Prog/TRANS.5B.txt     S5 
typein line     M #ER#                  ; Save to track 40LR (chars #E), loads in cols /E@A 
typein line     K "SA TRANS/SIX///
typein routine  Prog/TRANS.6A.txt     S4        
typein routine  Prog/TRANS.6B.txt     S5 
typein line     M DER#                  ; Save to track 41LR (chars DE), loads in cols /E@A 
typein line     K "SA TRANS/SEVEN/
typein routine1 Prog/TRANS.7.txt      S4        
typein routine2 Prog/TRANS.7.txt      S5 
typein line     M RER#                  ; Save to track 42LR (chars RE), loads in cols /E@A 
typein line     K "SA TRANS/EIGHT/
typein routine1 Prog/TRANS.8.txt      S4        
typein line     M JE##                  ; Save to track 43L (chars JE), loads in cols /E
typein routine2 Prog/TRANS.8.txt      S4 
typein line     M JED#                  ; Save to track 43R (chars JE), loads in cols NF
typein line     K "SA TRANS/NINE//
typein routine  Prog/TRANS.9A.txt     S4        
typein routine  Prog/TRANS.9B.txt     S5 
typein line     M NER#                  ; Save to track 44LR (chars NE), loads in cols /E@A 

typein line     K "SA ASSEMBLY/ONE
typein routine  Prog/ASSEMBLY.1A.txt  S4        
typein routine  Prog/ASSEMBLY.1B.txt  S5 
typein line     M CER#                  ; Save to track 46LR (chars CE), loads in cols /E@A 
typein line     K "SA ASSEMBLY/TWO
typein routine  Prog/ASSEMBLY.2A.txt  S4        
typein line     M KED#                  ; Save to track 47R (chars KE), loads in cols IU

typein line     K "SA ECONOMISE///
typein routine  Prog/ECONOMISE.1A.txt S4        
typein routine  Prog/ECONOMISE.1B.txt S5 
typein line     M VER#                  ; Save to track 62LR (chars VE), loads in cols /E@A 

typein line     K "SA DIRECTORY///  
typein routine1 Prog/DIRECTORY.txt    S4        
typein routine2 Prog/DIRECTORY.txt    S5
typein line     M K/R#                  ; Save to track 15LR (chars K/), loads in cols #DRJ 

typein line     K "SA FUNC/CUE/DIR
typein routine  Prog/FUNCTION.CUE.DIR.txt S4        
typein line     M $E##                  ; Save to track 63L (chars $E), loads in cols #D

typein line     K "SA TRACK/SEL///
typein routine  Prog/TRACK.SELECTION.txt    S4        
typein line     M $/D#                  ; Save to track 31R (chars $/), loads in cols RJ

typein line     K "SA MOD/N/DIV///
typein routine  Prog/MOD.N.DIV.txt    S4        
typein line     M $/##                  ; Save to track 31L (chars $/), loads in cols /E

typein line     K "SA DECINPUT////
typein routine  Prog/DECINPUT.1A.txt  S4   
typein routine  Prog/DECINPUT.1B.txt  S5
typein line     M L/R#                  ; Save to track 18LR (chars L/), loads in cols /E@A

typein line     K "SA DECOUTPUT/F/
typein routine  Prog/DECOUTPUT.F.txt  S4
typein line     M W/##                  ; Save to track 19L (chars W/)

typein line     K "SA DIVISION/F//
typein routine  Prog/DIVISION.F.txt   S4
typein line     M Y/##                  ; Save to track 21L (chars Y/)

typein line     K "SA COMPLEX/ADD/ 
typein routine  Prog/COMPLEX.ADD.txt  S4
typein line     M TE##                  ; Save to track 48L (chars TE), loads in cols /E

typein line     K "SA COMPLEX/SUB/ 
typein routine  Prog/COMPLEX.SUB.txt  S4
typein line     M TED#                  ; Save to track 48R (chars TE), loads in cols /E

typein line     K "SA COMPLEX/DIV/ 
typein routine  Prog/COMPLEX.DIV.txt  S4
typein line     K "SA COMPLEX/MULT 
typein routine  Prog/COMPLEX.MULT.txt S5
typein line     M ZER#                  ; Save to track 49LR (chars ZE), loads in cols /E@A

typein line     K "SA CPLX/DIV/FIX        
typein routine  Prog/COMPLEX.DIV.FIX.txt S4
typein line     M HE##                  ; Save to track 52L (chars TE), loads in cols NF

typein line     K "SA RADIUS/ANGLE
typein routine1 Prog/RADIUS.ANGLE.F.txt S4
typein routine2 Prog/RADIUS.ANGLE.F.txt S5
typein line     M LER#                  ; Save to track 50LR (chars LE), loads in cols /E@A 

typein line     K "SA CPLX/TOPOLAR 
typein routine  Prog/COMPLEX.TO.POLAR.txt S4
typein line     M YE##                  ; Save to track 53L (chars YE), loads in cols /E

; Track 6  -> used to save and call in generated code to be exec when into brackets "(" .. ")"
; Track 63 -> contains empty track (to reset cue list track 64)
; Track 64 -> cue list to labels 
; Track 65 .. 127 -> contains compiled program 
; Track 128 .. -> contains data for v variables 

; add SchemeC library routines used by autocode
; apply modifications required by autocode

typein line     K "SA DECOUTPUT///
typein routine  ../SchemeC/Lib/DECOUTPUT.txt       S4
typein line     M W/D#                  ; Save to track 19R (chars W/)

typein line     K "SA ADD/MULTIPLY
typein routine  ../SchemeC/Lib/ADD_MULTIPLY.txt    S4  ; loads in col #D
typein line     K PD A                  ; fill spare lines as expected autocode runtime (a sort of run-time lib)
typein line     |      TS//             ; "PD/P" instr used in generated prog to enter RCS as ad-routine 
typein line     |      ////             ; spare
typein line     |      ////             ; spare
typein line     K BD E                  
typein line     |      WU//             ; "BD/P" instr used in generated prog to link to next track of generated code 
typein line     K GD @                  ; fill spare lines as expected autocode runtime (a sort of run-time lib)
typein line     |      $///             ; GD addr contains cue 
typein line     |      Y///             ; to DIVISION/F

typein line     K "SA NORMALISE///
typein routine  ../SchemeC/Lib/NORMALISE.txt       S5  ; loads in col IU
typein line     K HJ N                  ; routine link to next track of generated code invoked with BD/P. Uses WU..QU in NORMALISE
typein line     |      VU/A             ; (HU) save AM in [QD OD], AM=0 <- "BD/P" enters here
typein line     |      VA/J             ; (YU) AM=cue
typein line     |      //EA             ; (PU) save cue in [B1]
typein line     |      VU/J             ; (QU) restore AM             
typein line     |      PD/P             ; (OU) goto RCS link cue as ad-routine 
typein line     |      ////             ; (BU) spare 
typein line     |      ////             ; (GU) spare
typein line     |      ////             ; ("U) spare
typein line     |      ////             ; (MU) spare
typein line     |      ////             ; (XU) spare
typein line     |      ////             ; (VU) spare
typein line     |      ////             ; ($U) spare
typein line     M H/R#                  

typein line     K "SA DIVISION////	
typein routine  ../SchemeC/Lib/DIVISION.txt        S4
typein line     M Y/D#                  ; save to track 21R (chars Y/)

typein line     K "SA SQUAREROOT/F
typein routine  ../SchemeC/Lib/SQUAREROOT.F.txt    S4
typein line     K "SA SQUAREROOT//	
typein routine  ../SchemeC/Lib/SQUAREROOT.txt      S5
typein line     M P/R#                  ; save S4 S5 to track 22LR (chars P/)

typein line     K "SA COSINE/F////
typein routine  ../SchemeC/Lib/COSINE.F.txt        S4
typein line     K "SA COSINE//////	
typein routine  ../SchemeC/Lib/COSINE.txt          S5
typein line     M Q/R#                  ; save S4 S5 to track 23LR (chars Q/)

typein line     K "SA EXPONENT/F//
typein routine  ../SchemeC/Lib/EXPONENT.F.txt      S4
typein line     K "SA EXPONENT////	
typein routine  ../SchemeC/Lib/EXPONENT.txt        S5
typein line     M O/R#                  ; save S4 S5 to track 24LR (chars O/)

typein line     K "SA NATURALOG/F/
typein routine  ../SchemeC/Lib/NATURALOG.F.txt     S4
typein line     K "SA NATURALOG///	
typein routine  ../SchemeC/Lib/NATURALOG.txt       S5
typein line     M B/R#                  ; save S4 S5 to track 25LR (chars B/)

typein line     K "SA ARCTANGENT/F 
typein routine  ../SchemeC/Lib/ARCTANGENT.F.txt    S4
typein line     K "SA ARCTANGENT//	
typein routine  ../SchemeC/Lib/ARCTANGENT.txt      S5
typein line     M G/R#                  ; save S4 S5 to track 26LR (chars G/)


; apply optional modifications to autocode
; restore to working state X Y Z instructions (see note on TRANS.6A.txt)

typein line     K "SA RESTORE/XYZ/
typein line     M DE@#                  ; Loads TRANSLATE(6) in cols #DRJ 
typein line     K QD A                  ; modify 3 short lines starting at QE
typein line     |      FA#: 
typein line     |      CA#: 
typein line     |      JA#:
typein line     M DER#                  ; Save back to track 41LR (chars DE), loads for execution in cols /E@A 

typein line     M AE@#                  ; Loads MATRIX INSTRUCTIONS in cols #DRJ 
typein line     K JJ E                  ; set short line JK
typein line     |      //Z/
typein line     M AER#                  ; Save back to track 35LR (chars AE), loads in cols NFCK

typein line     M /E@#                  ; Loads INPUT(1) in cols #DRJ 
typein line     K @J I                  ; modify 6 short lines starting at @A
typein line     |      SAQG  
typein line     |      BIQB  
typein line     |      VJ/P  
typein line     |      Q///  
typein line     |      ////             ; this line is free
typein line     |      ////             ; this line is free
typein line     M /ER#                  ; Save back to track 32LR (chars /E), loads in cols /E@A 

typein line     M EE@#                  ; Loads INPUT(2) in cols #DRJ 
typein line     K BR @                  ; modify 2 short lines starting at BR
typein line     |      EA//
typein line     |      EA//
typein line     M EER#                  ; Save back to track 33LR (chars EE), loads in cols #DRJ

; restore to working state P instruction (see note on INPUT.2B.txt)

typein line     K "SA RESTORE/P///
typein line     M #E@#                  ; Loads TRANSLATE(5) in cols #DRJ
typein line     K PD E Y@/:             ; modify 2 short lines. (to xfer to  
typein line     K YR E WE//             ; left half track of ALTPRT, cols / E)
typein line     M #ER#                  ; Save back to track 40LR (chars #E), loads in cols /E@A

typein line     M AE@#                  ; Loads INSTRUCTION MATRIX in cols #DRJ
typein line     K /J @ E/// WE@/        ; replace cue for DECOUTPUT/F with link 
typein line     K @J @ $$// WE@/        ; to ALTPRT 
typein line     M AER#                  ; Save back to track 35L (chars AE), loads in cols NFCK

typein line     K "SA ALTPRT////// 
typein routine  Prog/ALTPRT.1A.txt       S4
typein routine  Prog/ALTPRT.1B.txt       S5
typein line     M WER#                  ; Save to track 51LR (chars WE), loads in /E@A

typein line     G
typein line     $$$$$$//////

det Perforator 

echo
echo ***
echo *** Load Drum-Resident Scheme C
echo ***
echo

att -n -q drum BAutocode.drm

; load drum with Basic SchemeC routines
; These are protected routines -> write is disabled for
; tracks 16-17 where these routines resides
load ../SchemeC/DrumIsolated/TELEINPUT.txt
load ../SchemeC/DrumIsolated/PERM.txt
load ../SchemeC/DrumIsolated/CONVERTER.txt

echo
echo
echo ***
echo *** Start Computer
echo *** Load Autocode Compiler tape into Drum
echo ***
echo

set cpu KEC

; Hand switches must all be set to T/@/ in order to load Scheme C from drum
dep H T/@/

; load Drum with routines
; attach compound tape and process it
; set ptr echo

; load Drum with Autocode routines
att -q ptr Tapes/BAutoCode.pt.txt

; SchemeC TELEINPUT will load autocode tape into drum
go -q

; now make the drum non persistent so test programs will not be saved on 
; simulation end
set drum nopersistent

echo
echo ***
echo *** Run Autocode Compiler 
echo ***
echo


if "%1"=="DEBUG" set debug -n -q debug.txt

feedptr K PS @ //// /E@/       ; run Autocode Compiler
feedptr T CS
go

; run simplest program (p46)
;    1 *n1=1
;       (j1)

; feed the program directy to PTR. The translaton form autocode to 
; standard teletype charcode has been made manually chat by char 
feedptr  E A XE R E  VF    ; 1 *n1=1   <cr> <lf>
feedptr  S HE I      VF    ;    (j1)   <cr> <lf>
go

; perform compiler validation tests
; (using manually prepared tapes)

att -q ptr Validation/Test01_jump.pt.txt
go
att -q ptr Validation/Test02_assign.pt.txt
go
att -q ptr Validation/Test03_int_add_sub.pt.txt
go
att -q ptr Validation/Test04_int_mult_div.pt.txt
go
att -q ptr Validation/Test05_float_add.pt.txt
go

; perform compiler validation tests
; (using tapes punched with autocode Perforator)

att -q -n Perforator Tapes/BAutoCode_prog.pt.txt
typein BAutocode source  Validation/Test06_simplest_prog.ba.txt   
det -q Perforator
att -q ptr Tapes/BAutoCode_prog.pt.txt
go

set Perforator NoEcho

; create a tape with 3 lines of autocode program
; the typein command read autocode chars, and generates the 
; correct chars in the output paper tape file attached 
; to Perforator device

att -q -n Perforator Tapes/BAutoCode_prog.pt.txt
typein BAutocode line   1 *n1=2
typein BAutocode line      H
typein BAutocode line      (j1)
det -q Perforator
att -q ptr Tapes/BAutoCode_prog.pt.txt
go

; create a tape with an autocode program
; the typein command read autocode chars from file, and generates the 
; correct chars in the output paper tape file attached 
; to Perforator device

att -q -n Perforator Tapes/BAutoCode_prog.pt.txt
typein BAutocode source  Validation/Test07_float_sub.pt.txt   
det -q Perforator
att -q ptr Tapes/BAutoCode_prog.pt.txt
go

att -q -n Perforator Tapes/BAutoCode_prog.pt.txt
typein BAutocode source  Validation/Test08_float_mult_div.ba.txt   
det -q Perforator
att -q ptr Tapes/BAutoCode_prog.pt.txt
go

att -q -n Perforator Tapes/BAutoCode_prog.pt.txt
typein BAutocode source  Validation/Test09_func.ba.txt   
det -q Perforator
att -q ptr Tapes/BAutoCode_prog.pt.txt
go

att -q -n Perforator Tapes/BAutoCode_prog.pt.txt
typein BAutocode source  Validation/Test10_func2.ba.txt   
det -q Perforator
att -q ptr Tapes/BAutoCode_prog.pt.txt
go

att -q -n Perforator Tapes/BAutoCode_prog.pt.txt
typein BAutocode source  Validation/Test11_func3.ba.txt   
det -q Perforator
att -q ptr Tapes/BAutoCode_prog.pt.txt
go

att -q -n Perforator Tapes/BAutoCode_prog.pt.txt
typein BAutocode source  Validation/Test12_inmed_mode.ba.txt
det -q Perforator
att -q ptr Tapes/BAutoCode_prog.pt.txt
go

att -q -n Perforator Tapes/BAutoCode_prog.pt.txt
typein BAutocode source  Validation/Test13_print.ba.txt
det -q Perforator
att -q ptr Tapes/BAutoCode_prog.pt.txt
go

att -q -n Perforator Tapes/BAutoCode_prog.pt.txt
typein BAutocode source  Validation/Test14_cond_jump.ba.txt
det -q Perforator
att -q ptr Tapes/BAutoCode_prog.pt.txt
go

att -q -n Perforator Tapes/BAutoCode_prog.pt.txt
typein BAutocode source  Validation/Test15_input.ba.txt
det -q Perforator
att -q ptr Tapes/BAutoCode_prog.pt.txt
go

att -q -n Perforator Tapes/BAutoCode_prog.pt.txt
typein BAutocode source  Validation/Test16_complex_mode.ba.txt
det -q Perforator
att -q ptr Tapes/BAutoCode_prog.pt.txt
go


set Perforator Echo

det ptr

:end
