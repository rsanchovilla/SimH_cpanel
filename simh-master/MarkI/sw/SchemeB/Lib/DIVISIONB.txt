DIVISION/B                        Date.   3.7.52

    Purpose: To find the quotient of two numbers in
             plus-minus convention
             
    Cues: / @ G Z Y E E Z
          E @ / / D E / @   for R.C.S/B
          
    Principal lines: [/A] = I C / E
             
    Magnetic Storage: variable     Electronic Storage: S1
    
    Stores Altered: /C  up to UC
    
    Effects: x = [/C] signed integer
             y = [:C] signed integer
             
             the routine calculates
             
             x/y = [@C] (signed integral part) + 
                   [/C]*2^(-40) (fractional part)
                   
                   if |x/y| < 0.5      -> [/C] contains quotient
                                               on signed fractional convention
                   if 0.5 < |x/y| < 1  -> sign is in [@C],  
                                          [/C] contains quotient
                                               on unsigned fractional convention
                   if |x/y| < 1        -> [@C] contains quotient
                                               on signed integer convention
                                          [/C] contains quotient
                                               on unsigned fractional convention
    Note by Roberto Sancho: 
    if |x/y| in range 0 .. +0.5 then [@C]=0, 
                                     [/C] is signed fractional form 
                                          in range -0.5 .. +0.5 
    if |x/y| in range +0.5 .. 1 then [@C]= either 0, either -1 (signed integer form)
                                     [/C] is unsigned fractional form 
                                          in range 0.0 .. 0.9999999 
    The routine DECOUTPUT/A takes [@C] and [/C] as input and print the
    decimal result with this same sign convention stated here

    
    Floatcode - Bodleian Special Collection 
    MS. Eng. misc. b. 260-C.42.pdf
    p1
    
    Note by Roberto Sancho: 
    the cue directory entry has ben changed form 
    original HEEZ value to YEEZ value, so it does not conflict with 
    DIVISION A cue. Division by zero hang on an inlinite loop

    For RCS/B, the cue dir entry has ben changed from value in
    original doc ...@. A new cue is provided based on track routine 
    actualy has being stored to when Scheme B is built. 

    [Routine DIVISION/B ] 
    
    [Col @          A ]      
                                     
    | R@// | / | IC/E |                                           
    | VSTA | E | E:/M | 
    | :CT# | @ | Y@/P |                                          
    | IC/S | A | //T: |                                          
    | S:/M | : | NS/P |                                          
    | ICTF | S |      |                                          
    | ICTA | I |      |                                          
    | /CTF | U |      |  
    | /CTA | # |      |                                          
    | /CT# | D |      |                                          
    | @C/A | R |      |                                          
    | /CT/ | J |      | 
    | /CTI | N |      | 
    | @C/J | F |      | 
    | @C/J | C |      | 
    | @C/A | K |      | 
    | /CTA | T |      | 
    | ICTK | Z |      | 
    | ICTA | L |      | 
    | ICT# | W |      | 
    | /@/H | H |      | 
    | H@T: | Y |      | 
    | IC/K | P |      |                                      
    | /C/# | Q |      |                                      
    | VA/U | O |      |                                      
    | @C/D | B |      |                                      
    | /CTI | G |      |                                      
    | @C/J | " |      |                                      
    | @C/A | M |      | 
    | /CTA | X |      | 
    | IST/ | V |      | 
    | IC/D | $ |      | 
          
    Tape: DIVISION B
    Destination Sequence: KAK@//E#HEEZ
          
    [End]

    64  /@  R@//  
    65  E@  VSTA  Entry Point: save return link [VS]
    66  @@  :CT#  AL=[:C]=y=divisor = 7
    67  A@  IC/S  [IC,UC]=7
    68  :@  S:/M  if (AM>=0) goto 73
    69  S@  ICTF  
    70  I@  ICTA  
    71  U@  /CTF  
    72  #@  /CTA  
    73  D@  /CT#  A=[/C]=x=dividend = 22
    74  R@  @C/A  [@C]=0
    75  J@  /CT/  AL=22, AM=0
    76  N@  /CTI  AL=AL*2
    77  F@  @C/J  AM=AM+[@C] (result)
    78  C@  @C/J  AM=AM*2
    79  K@  @C/A  
    80  T@  /CTA  
    81  Z@  ICTK  
    82  L@  ICTA  
    83  W@  ICT#  
    84  H@  /@/H  
    85  Y@  H@T:  
    86  P@  IC/K  
    87  Q@  /C/#  
    88  O@  VA/U  
    89  B@  @C/D  
    90  G@  /CTI  
    91  "@  @C/J  
    92  M@  @C/A  
    93  X@  /CTA  
    94  V@  IST/  
    95  $@  IC/D  
    96  /A  IC/E  
    97  EA  E:/M  
    98  @A  Y@/P  
    99  AA  //T:  
   100  :A  NS/P  
   101  SA        
   102  IA        
   103  UA        
   104  #A        
   105  DA        
   106  RA        
   107  JA        
   108  NA        
   109  FA        
   110  CA        
   111  KA        
   112  TA        
   113  ZA        
   114  LA        
   115  WA        
   116  HA        
   117  YA        
   118  PA        
   119  QA        
   120  OA        
   121  BA        
   122  GA        
   123  "A        
   124  MA        
   125  XA        
   126  VA        
   127  $A        
   128              
   129              
   130              
