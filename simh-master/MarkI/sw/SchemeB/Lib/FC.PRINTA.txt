FC/PRINT/A                                    Date: 1952
     
    Floatcode - Bodleian Special Collection 
    MS. Eng. misc. b. 260-C.42.pdf
    p13, p56
     
    Cues: $ $ / / . . . /    print CR LF then number
          E / / / . . . /    print number (no leading CR LF)

     
    Note by Roberto Sancho: this routine prints the float number
    in its native binary form as 

           ppp nnnnnn nnnnn    

    the number is F=0.nnnnn x 2^ppp
    This is the binary representation of float

    Some examples

              Float Binary
    Decimal   mantissa exp                    PRINTA printout
    1024      /////#   O/    (#=00010, O=24)  012 250000 00000  -> 0.25 x 2^12  = 1024
     256      /////#   H/              H=20   010 250000 00000  -> 0.25 x 2^10  = 256
       2      /////#   I/              I=6    003 250000 00000  -> 0.25 x 2^3   = 2
       1      /////#   :/              :=4    002 250000 00000  -> 0.25 x 2^2   = 1
      10      /////R   R/     R=01010  R=10   005 312500 00000  -> 0.3125 x 2^5 = 10
     100      ////TN   T/  TN=1 00110  T=16   008 390625 00000  -> 0.390625 x 2^8 = 100
     333      ////FR   H/  FR=0 01010  H=20   010 325195 31250  -> 0.3251.. x 2^10 = 333 
    

    [Routine FC:PRINT/A ] 
  
    [Col /          E ]    
                           
    | UE/: | / | :ETK |    
    | #E/: | E | :E/S |    
    | RE/: | @ | T//H |    
    | CS/K | A | AU/P |    
    | JE/F | : | //// |    
    | E:/Q | S | CT/I |    
    | FST/ | I | //T/ |    
    | JETA | U | //L/ |    
    | JET# | # | //W/ |    
    | S:/M | D | //Z/ |    
    | JETF | R | //H/ |    
    | #//J | J | FT// |    
    | IE/: | N | //// |    
    | E:/Q | F | R/// |    
    | DE/: | C | //// |    
    | JETA | K | ///E |    
    | S/T: | T |      |    
    | JE/C | Z |      |    
    | FE/N | L |      |    
    | JE/A | W |      |    
    | JE/C | H |      |    
    | JETA | Y |      |    
    | CE/N | P |      |    
    | K//I | Q |      |    
    | IE/: | O |      |    
    | :ETK | B |      |    
    | :E/S | G |      |    
    | Q//H | " |      |    
    | DE/: | M |      |    
    | :ETK | X |      |    
    | :E/S | V |      |    
    | Q//H | $ |      |    
                

    [End]                               
    
     0  //  UE/:  Print <CR>             [FS, CS] = F(A) mant = /T$$ $$$K
     1  E/  #E/:  Print <LF>             [KS]            exp  = @///      
     2  @/  RE/:  set figure shift 
     3  A/  CS/K  D=[CS, KS]=.... F(A)_exp = .... :///
     4  :/  JE/F  A=10^-3 * F(A)_exp/2^31  = WK$K /DE/
     5  S/  E:/Q  goto 7

     6  I/  FST/  
     7  U/  JETA  [JE]=AL                  = WK$K /DE/
     8  #/  JET#  AL=[JE]
     9  D/  S:/M  if (AM>=0) goto 14
    10  R/  JETF  
    11  J/  #//J  
    12  N/  IE/:  
    13  F/  E:/Q  

    14  C/  DE/:  print space (because exponent positive)
    15  K/  JETA  [JE]=AL
    16  T/  S/T:  A=0
    17  Z/  JE/C  D=[JE] = .... /DE/
    18  L/  FE/N  AL = .... /DE/ x 10 = .... :GN/
    19  W/  JE/A  [JE]=0
    20  H/  JE/C  D=[JE]
    21  Y/  JETA  [JE]=AL
    22  P/  CE/N  
    23  Q/  K//I  Swap AL<->AM
    24  O/  IE/:  print digit
    25  B/  :ETK  A=[:E] digit layout * 2
    26  G/  :E/S  [:E]=AL
    27  "/  Q//H  if (AM>=0) goto 16 print digit
    28  M/  DE/:  print space
    29  X/  :ETK  A=[:E] digit layout * 2
    30  V/  :E/S  [:E]=AL
    31  $/  Q//H  if (AM>=0) goto 16 print digit
    32  /E  :ETK  A=[:E] digit layout * 2
    33  EE  :E/S  [:E]=AL
    34  @E  T//H  if (AM>=0) goto 6
    35  AE  AU/P  closure -> return to caller
    36  :E  ////  const ...
    37  SE  CT/I        ... digit layout
    38  IE  //T/  const print digit
    39  UE  //L/  const carriage return
    40  #E  //W/  const line feed
    41  DE  //Z/  const space
    42  RE  //H/  const figure shift
    43  JE  FT//  const ...
    44  NE  ////        ... 2^(-31)x10^(-3)
    45  FE  R///  const ...
    46  CE  ////        ... 10
    47  KE  ///E  
                  
