B/MATHTEST                        Date. 15.12.2022

    Purpose: To test input routines, output routines, 
             and math routines
            
    Cue: / / O $ R / @ /    
             
                     
    Magnetic Storage: variable      Electronic Storage: S0 S1
    
    Stores Altered:  
    
    Effects: The cue is set so the routine is entered in
             interpretative mode. 
             
    
    [Routine FLOATCODE ROUTINE       ] 

    [Col /          E ]                 [Col @          A ]              
                                                                          
    |      | / | //// |                 |      | / | //// |                                         
    | ://V | E | /##/ |  4              |      | E |      |               
    | /A/Y | @ | //// |                 |      | @ |      |                           
    | I//V | A | /#I/ |  2              |      | A |      |                           
    | /F/W | : |      |                 |      | : |      | 
    | I//V | S |      |                 |      | S |      |          
    | R//V | I | //// |                 |      | I |      | 
    | I//V | U | //ET |                 |      | U |      | 
    | T//V | # |      |                 |      | # |      |                                        
    | I//V | D |      |                 |      | D |      |                                        
    | C//V | R |      |                 |      | R |      |                                        
    | I//V | J |      |                 |      | J |      |               
    | ///P | N |      |                 |      | N |      |               
    | ///P | F |      |                 |      | F |      |               
    | /A/Y | C |      |                 |      | C |      |               
    | #F/W | K |      |                 |      | K |      |               
    | I//V | T |      |                 |      | T |      |               
    | /A/Y | Z |      |                 |      | Z |      |               
    | IF/W | L |      |                 |      | L |      |               
    | I//V | W |      |                 |      | W |      |               
    | /A/Y | H |      |                 |      | H |      |               
    | #F/B | Y |      |                 |      | Y |      |               
    | IF/Q | P |      |                 |      | P |      |                                    
    | I//V | Q |      |                 |      | Q |      |                                    
    | N//V | O |      |                 |      | O |      |                                    
    | I//V | B |      |                 |      | B |      |                                    
    | ///P | G |      |                 |      | G |      |                                    
    | /A/Y | " |      |                 |      | " |      |                                    
    | :F/W | M |      |                 |      | M |      |               
    | I//V | X |      |                 |      | X |      |               
    | #//V | V |      |                 |      | V |      |               
    | L//X | $ |      |                 |      | $ |      |               
                                                                          
    Tape FCROUTINE ONE                   Tape: FCROUTINE TWO

    [End ]

   0  //  
   1  E/  ://V  call FC.DECINPUT      -> will read from PTR floats in [/F, ...] 
   2  @/  /A/Y  [/A, EA]=F(A), F(A)=0 -> clear acc
   3  A/  I//V  call FC.DECPRINT      -> print acc -> print zero
   4  :/  /F/W  F(A)=F(A)+F(/F)       -> load in F(A) value from [/F]=25.0 previously read with DECINPUT
   5  S/  I//V  call FC.DECPRINT      -> print acc -> print 25 first read value
   6  I/  R//V  call FC.SQUAREROOT    -> F(A)=SQRT( F(A) ) -> F(A)=5.0
   7  U/  I//V  call FC.DECPRINT      -> print acc 
   8  #/  T//V  call FC.NATURALLOG    -> F(A)=LN( F(A) ) -> F(A)=LN(5)=1.60943
   9  D/  I//V  call FC.DECPRINT      -> print acc       
  10  R/  C//V  call FC.EXPONENTIAL   -> F(A)=EXP( F(A) ) -> F(A)=EXP(1.6)=5
  11  J/  I//V  call FC.DECPRINT      
  12  N/  ///P  dummy
  13  F/  ///P  dummy                                                                                                                                                        
  14  C/  /A/Y  [/A, EA]=F(A), F(A)=0 -> clear acc                                                           
  15  K/  #F/W  F(A)=F(A)+F(#F)       -> load in F(A) value from [#F]=4                                                                                                                                                                                                     
  16  T/  I//V  call FC.DECPRINT      -> print acc                                                                                                                                                                                                       
  17  Z/  /A/Y  [/A, EA]=F(A), F(A)=0 -> clear acc                                                                                                                                                                                                        
  18  L/  IF/W  F(A)=F(A)+F(IF)       -> load in F(A) value from [IF]=PI                                                                                                                                                                                 
  19  W/  I//V  call FC.DECPRINT      -> print acc                                                                                                                                                                                                                              
  20  H/  /A/Y  [/A, EA]=F(A), F(A)=0 -> clear acc                                                                                                                                                                                                                            
  21  Y/  #F/B  F(R)=1/F(#F)          -> load in F(R) inv value from [#F]=-4 -> F(R)=-1/4                      
  22  P/  IF/Q  F(A)=F(A)+F(R)*F(IF)  -> F(A)=PI*(-1/4)
  23  Q/  I//V  call FC.DECPRINT      -> print acc                                                           
  24  O/  N//V  call FC.ARCOT         -> ARCOT(0)=PI/2                                                       
  25  B/  I//V  call FC.DECPRINT      -> print acc                   
  26  G/  ///P  dummy                                                
  27  "/  /A/Y  [/A, EA]=F(A), F(A)=0 -> clear acc                   
  28  M/  :F/W  F(A)=F(A)+F(:F)       -> load in F(A) value from [:F]=1.0
  29  X/  I//V  call FC.DECPRINT      -> print acc                   
  30  V/  #//V  call FC.PRINTA        -> print acc with layout
  31  $/  L//X  return from FLOATCODE to B.INPUT                                          
  
  32  /E  
  33  EE  
  34  @E  
  35  AE  
  36  :E  
  37  SE  
  38  IE  
  39  UE  
  40  #E  
  41  DE  
  42  RE  
  43  JE  
  44  NE  
  45  FE  
  46  CE  
  47  KE  
  48  TE  
  49  ZE  
  50  LE  
  51  WE  
  52  HE  
  53  YE  
  54  PE  
  55  QE  
  56  OE  
  57  BE  
  58  GE  
  59  "E  
  60  ME  
  61  XE  
  62  VE  
  63  $E  
                
                
                
                