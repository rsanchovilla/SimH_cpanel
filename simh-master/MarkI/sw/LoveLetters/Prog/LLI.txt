
     
    Author: Christopher Strachey    Date: Summer 1952

    Love Letters - Bodleian Special Collection
    MS. Eng. misc. b. 259-C.34

    This program is transcribed from printout in p37
    Nevertheless, the author identified a number of corrections 
    stated in p24, and in p33 and following. These corrections have been 
    applied (original value left as "was")
    
    Mag Instr to load routine: BS@/ -> track 185
    
    [LLI ]           
                                        
    [Col /          E ]                 [Col @          A ]
                                                           
    | //I/ | / | $$$$ | was IN// *      | U@PO | / | E:LG |      
was | //ZO | E | DSWG |        was CUQO | @UQO | E | SE/T |
/E/:| ZA/: | @ | /RW# |                 | E:/O | @ | SAWO |     
was | DEQO | A | ERAH |                 | DSPG | A | SE/P |     
AIDQ| AIQB | : | Q/T: |                 | USQG | : | P"$$ |     
    | RE/: | S | R//W |        was CUQB | @UQB | S | L/// |     
    | S:LO | I | USTN |                 | SE/P | I | #APO |     
    | DSWO | U | ERAH |                 | W"$$ | U | SE/P |     
    | IST/ | # | J:/P |                 | R@PO | # | Q"$$ |     
    | /UTA | D | /N// |*                | SE/P | D | JAPO |     
    | CAPO | R | EN// |*                | Y"$$ | R | SE/P |     
    | TAQO | J | PEPO |                 | B@/: | J | O"$$ |
    | /UT/ | N | @UTB | was CUTB        | E:/Q | N | ///G |
    | OKPN | F | SE/P |                 | G@/: | F | /:/P |
    | :E/H | C | ///W |                 | E:/Q | C | U"$$ |
was | BS/J | K | WEWR |                 | "@/: | K | R/// |
N//:| LA/: | T | VKTA |                 | E:/Q | T | M/QO | was X/QO
was | V:/J | Z | VKPO |                 | M@/: | Z | S//: | was ////
N//:| WA/: | L | BEPG |                 | Z@/W | L | //L/ | was ////
    | VK/A | W | SE/P |                 | X@TR | W | //W/ | was ////
was | BS/J | H | A/// |                 | VKTA | H |      |
N//:| LA/: | Y | U/// |                 | VKPO | Y |      |
    | IST/ | P | #"$$ |                 | BKPG | P |      |
    | OKPN | Q | GEPO |                 | L@/T | Q |      |
    | /UTA | O | SE/P |                 | SE/P | O |      |
    | BKP/ | B | Q:// |                *| @N// | B |      |
    | V/TR | G | Z"$$ |                *| AN// | G |      |
    | VKTA | " | @UTB | was CUTB       *| :N// | " |      |
    | VKHO | M | KAWO |                *| SN// | M |      |
    | GS/P | X | $EPO |                 | $E// | X |      |
    | $$// | V | SE/P |                 | S:WO | V |      |
   *| PN// | $ | L"$$ |                 | :APO | $ |      |
         
   *  Indicates dir entries for subroutines
      Will need a Fab warning char for each one
      when loading the paper tape (see run.ini)
         
    [End]
  
   0  //  //I/  const B1 initial value for RCS
   1  E/  //ZO  Entry point: B1=//I/ set stack pointer for RCS
   2  @/  ZA/:  Read PERM from Track 5L to Tube S2
   3  A/  DEQO  B7=[DE]=mag instr to load LLI 
   4  :/  AIQB  [AI]=mag instr to load LLI 
   5  S/  RE/:  Read LLII from Track 186 to Tube S4 S5
   6  I/  S:LO  B2=4
   7  U/  DSWO  B3=-1
   8  #/  IST/  AL=//// ///T, AM=0
   9  D/  /UTA  [/U, EU]=//// ///T, A=0
  10  R/  CAPO  B6=[CA] -> B6=addr of TEXT to print. [CA]=points to <cr><lf><cr>
  11  J/  TAQO  B7=M/QO -> set return addr 33 for RCS call
  12  N/  /UT/  AL=[/U]=//// ///T
  13  F/  OKPN  
  14  C/  :E/H  if (A>=0) goto 24
  15  K/  BS/J  
  16  T/  LA/:  print <cr>
  17  Z/  V:/J  
  18  L/  WA/:  print <lf>
  19  W/  VK/A  
  20  H/  BS/J  
  21  Y/  LA/:  print <cr>
  22  P/  IST/  
  23  Q/  OKPN  
  24  O/  /UTA  
  25  B/  BKP/  AL=addr of ENGPRINT string for text in B6
  26  G/  V/TR  AL=AL AND $$//
  27  "/  VKTA  [VK]=AL, A=0 
  28  M/  VKHO  B4=[VK]=addr of string (in ENGPRINT format) to print
  29  X/  GS/P  call RCS
  30  V/  $$//  entry point
  31  $/  PN//  const ENGPRINT dir entry 
 
  32  /E  $$$$  dummy  
  33  EE  DSWG  incr B3 -> incr word sequence number (B3 is the words sequence in LLII, col R)
  34  @E  /RW#  AL=[/R + B3] get next word type in word sequence
  35  AE  ERAH  if (A>=0) goto process word type
                              AL=....RE// goto 43 -> print 7x<LF>
                              AL=....FE// goto 46 -> print "dear" .. "jewel" for B6=random 0..3
                                     U/// goto 8  -> print <cr><lf><cr>
                                     PE// goto 55 -> print 7x<spaces>
                                     GE// goto 59 -> print "my"
                                     $E// goto 64 -> print "your are"
                                     N@// goto 77 -> print NOUN
                                     T@// goto 81 -> print VERB
                                     U@// goto 72 -> print "your"
                                     R@// goto 75
                                     X@// goto 94
                                     ME// goto 61
                                     SA// goto 102
                                     C@// goto 79
                                     #A// goto 105 -> print <lf> "MUC"
                                     JA// goto 108 -> end prog
  36  :E  Q/T:  A=0
  37  SE  R//W  random
  38  IE  USTN  
  39  UE  ERAH  if (A>=0) goto process word type
  40  #E  J:/P  goto 33
  41  DE  /N//  const with master routine LLI dir entry 
  42  RE  EN//  const LLII dir entry 

  43  JE  PEPO  B6= 7x<LF>
  44  NE  @UTB  @U=B0 -> clear short line
  45  FE  SE/P  goto 11

  46  CE  ///W  random
  47  KE  WEWR  and 3 (if B3=1)
                    7 (if B3=2)
  48  TE  VKTA  [VK]=AL the random number 
  49  ZE  VKPO  B6=[VK]= the random number
  50  LE  BEPG  
  51  WE  SE/P  goto 11
  52  HE  A///  
  53  YE  U///  
  54  PE  #"$$  const addr for text 7x<LF>

  55  QE  GEPO  B6=Z"$$
  56  OE  SE/P  goto 11
  57  BE  Q://  
  58  GE  Z"$$  

  59  "E  @UTB  @U=0
  60  ME  KAWO  B3=10
  61  XE  $EPO  B6=L"$$
  62  VE  SE/P  goto 11

  63  $E  L"$$  

  64  /@  U@PO  B6=W"$$
  65  E@  @UQO  B7=@U
  66  @@  E:/O  if (B>=0) goto 68
  67  A@  DSPG  B6=H"$$ 
  68  :@  USQG  
  69  S@  @UQB  
  70  I@  SE/P  goto 11

  71  U@  W"$$  

  72  #@  R@PO  "your"
  73  D@  SE/P  goto 11
  74  R@  Y"$$  

  75  J@  B@/:  ADJ
  76  N@  E:/Q  

  77  F@  G@/:  Read from Track 188L to Tube S6 (NOUNS)
  78  C@  E:/Q  goto 80

  79  K@  "@/:  ADV
  80  T@  E:/Q  goto 82

  81  Z@  M@/:  Read from Track 190L to Tube S6 (VERB)

  82  L@  Z@/W  random
  83  W@  X@TR  AND $E//
  84  H@  VKTA  [VK]=random num 0..63
  85  Y@  VKPO  B6=random num 0..63 
  86  P@  BKPG  B6=B6-29  (B6=X$$$ -3)
  87  Q@  L@/T  if (B>=0) goto 82
  88  O@  SE/P  goto 11
  89  B@  @N//  
  90  G@  AN//  
  91  "@  :N//  
  92  M@  SN//  
  93  X@  $E//  
  94  V@  S:WO  
  95  $@  :APO  
  96  /@  E:LG  
  97  EA  SE/T  
  98  @A  SAWO  
  99  AA  SE/P  
 100  :A  P"$$  
 101  SA  L///  

 102  IA  #APO  
 103  UA  SE/P  
 104  #A  Q"$$  

 105  DA  JAPO  print <lf>MUC
 106  RA  SE/P  

 107  JA  O"$$  

 108  NA  ///G  dummy stop /G
 109  FA  /:/P  goto 1 -> print a new Love Letter

 110  CA  U"$$  const addr for text <cr><lr><cr>
 111  KA  R///  
 112  TA  M/QO  const return addr from RCS call

